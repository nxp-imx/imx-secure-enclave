{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info
{\title {\comment ELE HSM API Rev 1.0  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
NXP Copyright \par
}}ELE HSM API Rev 1.0}
{\comment Generated by doxygen.}
{\creatim \yr2023\mo9\dy6\hr10\min27\sec0}
}\pard\plain
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt ELE HSM API Rev 1.0}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version NXP Copyright\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Wed Sep 6 2023 }}\par
\page\page\vertalt
\pard\plain
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid
ELE HSM API\par \pard\plain
{\tc \v ELE HSM API}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This document is a software referece description of the API provided by the i.MX8ULP, i.MX93 HSM solutions for ELE Platform. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid
Revision History{\tc \v Revision History}\par \pard\plain
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{Revision \cell }{date \cell }{description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{0.1 \cell }{Apr 27 2023 \cell }{Preliminary draft  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid
General concepts related to the API{\tc \v General concepts related to the API}\par \pard\plain
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
 \par
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Session
\par}
{\tc\tcl2 \v Session}
The API must be initialized by a potential requestor by opening a session.\par
The session establishes a route (MU, DomainID...) between the requester and the HSM. When a session is opened, the HSM returns a handle identifying the session to the requester. \par}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Service flow
\par}
{\tc\tcl2 \v Service flow}
For a given category of services which require service handle, the requestor is expected to open a service flow by invoking the appropriate HSM API.\par
The session handle, as well as the control data needed for the service flow, are provided as parameters of the call.\par
Upon reception of the open request, the HSM allocates a context in which the session handle,as well as the provided control parameters are stored and return a handle identifying the service flow.\par
The context is preserved until the service flow, or the session, are closed by the user and it is used by the HSM to proceed with the sub-sequent operations requested by the user on the service flow. \par}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Example
\par}
{\tc\tcl2 \v Example}
 \par}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Key store
\par}
{\tc\tcl2 \v Key store}
A key store can be created by specifying the CREATE flag in the hsm_open_key_store_service API. Please note that the created key store will be not stored in the NVM till a key is generated or imported specyfing the "STRICT OPERATION" flag.\par
Only symmetric and private keys are stored into the key store. Public keys can be exported during the key pair generation operation or recalculated through the hsm_pub_key_recovery API.\par
Secret keys cannot be exported under any circumstances, while they can be imported in encrypted form.\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Key management
\par}
{\tc\tcl3 \v Key management}
Keys are divided in groups, keys belonging to the same group are written/read from the NVM as a monolitic block.\par
Up to 3 key groups can be handled in the HSM local memory (those immediately available to perform crypto operations), while up to 1000 key groups can be handled in the external NVM and imported in the local memory as needed.\par
If the local memory is full (3 key groups already reside in the HSM local memory) and a new key group is needed by an incoming user request, the HSM swaps one of the local key group with the one needed by the user request.\par
The user can control which key group must be kept in the local memory (cached) through the manage_key_group API lock/unlock mechanism.\par
As general concept, frequently used keys should be kept, when possible, in the same key group and locked in the local memory for performance optimization.\par
\par}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
NVM writing
\par}
{\tc\tcl3 \v NVM writing}
All the APIs creating a key store (open key store API) or modyfing its content (key generation, key_management, key derivation functions) provide a "STRICT OPERATION" flag. If the flag is set, the HSM exports the relevant key store blocks into the external NVM and increments (blows one bit) the OTP monotonic counter used as roll back protection. In case of key generation/derivation /update the "STRICT OPERATION" has effect only on the target key group.\par
Any update to the key store must be considered as effective only after an operation specifying flag "STRICT OPERATION" is aknowledged by the HSM. All the operations not specifying the "STRICT
OPERATION" flags impact the HSM local memory only and will be lost in case of system reset\par
Due to the limited monotonic counter size, the user should, when possible, perform multiple udate before setting the "STRICT OPERATION" flag(i.e. keys to be updated should be kept in the same key group).\par
Once the monotonic counter is completely blown a warning is returned on each key store export to the NVM to inform the user that the new updates are not roll-back protected. \par}
\par}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Implementation specificities
\par}
{\tc\tcl2 \v Implementation specificities}
HSM API with common features are supported on i.MX8ULP and i.MX93.The details of supported features per chip will be listed in the platform specifities. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid
Module Index\par \pard\plain
{\tc \v Module Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Modules\par \pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all modules:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid
Session\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Key management\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Ciphering\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid
IMX8ULP\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Signature generation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Signature verification\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Random number generation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Hashing\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Data storage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Authenticated Encryption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Mac\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dump Firmware Log\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dev attest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dev Info\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Generic Crypto: Asymmetric Crypto\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Generic Crypto Asymmetric Key Generate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Get Info\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Public key recovery\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAART \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Key store\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Life Cycle update\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Global Information\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Error codes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid
Module Documentation{\tc \v Module Documentation}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Session\par \pard\plain
{\tc\tcl2 \v Session}
{\xe \v Session}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The API must be initialized by a potential requestor by opening a session.\par
Once a session is closed all the associated service flows are closed by the HSM. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_service_hdl_s}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 open_session_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 HSM_MAX_SESSIONS}}}
\~ (8u){\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Maximum sessions supported. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 HSM_MAX_SERVICES}}}
\~ (32u){\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Maximum services supported. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OPEN_SESSION_PRIORITY_LOW}}}
\~ (0x00U){\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Low priority. default setting on platforms that doesn't support sessions priorities. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OPEN_SESSION_PRIORITY_HIGH}}}
\~ (0x01U){\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
High Priority session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OPEN_SESSION_FIPS_MODE_MASK}}}
\~ (1u << 0){\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Only FIPS certified operations authorized in this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OPEN_SESSION_EXCLUSIVE_MASK}}}
\~ (1u << 1){\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
No other HSM session will be authorized on the same security enclave. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OPEN_SESSION_LOW_LATENCY_MASK}}}
\~ (1u << 3){\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Use a low latency HSM implementation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OPEN_SESSION_NO_KEY_STORE_MASK}}}
\~ (1u << 4){\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
No key store will be attached to this session. May provide better performances on some operation depending on the implementation. Usage of the session will be restricted to operations that doesn't involve secret keys (e.g. hash, signature verification, random generation). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OPEN_SESSION_RESERVED_MASK}}}
\~ ((1u << 2) | (1u << 5) | (1u << 6) | (1u << 7)){\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bits reserved for future use. Should be set to 0. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_session}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 open_session_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *session_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_session}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 session_hdl_to_ptr}}}
 (uint32_t hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_service_hdl_s}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAZ" }{}}{\fldrslt {\cs37\ul\cf2 service_hdl_to_ptr}}}
 (uint32_t hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 delete_session}}}
 (struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
 *s_ptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABB" }{}}{\fldrslt {\cs37\ul\cf2 delete_service}}}
 (struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_service_hdl_s}}}
 *s_ptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABC" }{}}{\fldrslt {\cs37\ul\cf2 add_session}}}
 (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_service_hdl_s}}}
 * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABD" }{}}{\fldrslt {\cs37\ul\cf2 add_service}}}
 (struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
 *session)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The API must be initialized by a potential requestor by opening a session.\par
Once a session is closed all the associated service flows are closed by the HSM. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v hsm_session_hdl_s}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct hsm_session_hdl_s\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the session handle members \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct plat_os_abs_hdl *{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{phdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Pointer to OS device node. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\cell }{session_hdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Session handle. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\cell }{mu_type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Session MU type. }\cell }{\row }
}
{\xe \v hsm_service_hdl_s}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct hsm_service_hdl_s\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the service handle members \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
 *{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\cell }{session\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Pointer to session handle. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{service_hdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Service handle. }\cell }{\row }
}
{\xe \v open_session_args_t}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_session_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the open session operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\cell }{session_hdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Session handle. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{session_priority\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Priority of the operations performed in this session. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\cell }{operating_mode\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Options for the session to be opened (bitfield). }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\cell }{interrupt_idx\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Interrupt number of the MU used to indicate data availability. }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_hdl_t\:Session}
{\xe \v Session\:hsm_hdl_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Define the HSM handle type \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_open_session\:Session}
{\xe \v Session\:hsm_open_session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_session ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 open_session_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i session_hdl})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{pointer to where the session handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error_code error code. \par
}}}}
{\xe \v hsm_close_session\:Session}
{\xe \v Session\:hsm_close_session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_session ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Terminate a previously opened session. All the services opened under this session are closed as well \par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{pointer to the handle identifying the session to be closed.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error_code error code. \par
}}}}
{\xe \v session_hdl_to_ptr\:Session}
{\xe \v Session\:session_hdl_to_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
* session_hdl_to_ptr (uint32_t  {\i hdl})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Returns pointer to the session handle\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hdl} \cell }{identifying the session handle.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
pointer to the session handle. \par
}}}}
{\xe \v service_hdl_to_ptr\:Session}
{\xe \v Session\:service_hdl_to_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_service_hdl_s}}}
* service_hdl_to_ptr (uint32_t  {\i hdl})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Returns pointer to the service handle\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hdl} \cell }{identifying the session handle.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
pointer to the service handle. \par
}}}}
{\xe \v delete_session\:Session}
{\xe \v Session\:delete_session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
void delete_session (struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
 *  {\i s_ptr})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Delete the session\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s_ptr} \cell }{pointer identifying the session. \cell }
{\row }
}
}}
{\xe \v delete_service\:Session}
{\xe \v Session\:delete_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
void delete_service (struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_service_hdl_s}}}
 *  {\i s_ptr})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Delete the service\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s_ptr} \cell }{pointer identifying the service. \cell }
{\row }
}
}}
{\xe \v add_session\:Session}
{\xe \v Session\:add_session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
* add_session (void )}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Add the session\par
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
pointer to the session. \par
}}}}
{\xe \v add_service\:Session}
{\xe \v Session\:add_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_service_hdl_s}}}
* add_service (struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_session_hdl_s}}}
 *  {\i session})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Add the service\par
 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
pointer to the service. \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Key management\par \pard\plain
{\tc\tcl2 \v Key management}
{\xe \v Key management}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 op_delete_key_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 op_get_key_attr_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 op_import_key_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABR" }{}}{\fldrslt {\cs37\ul\cf2 kek_enc_key_hdr_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_key_ext_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_key_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_key_management_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 op_manage_key_group_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_DEL_KEY_FLAGS_STRICT_OPERATION}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
)(1u << 7))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABY" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_IMPORT_KEY_INPUT_E2GO_TLV}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
)(1u << 0)){\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit 0: set 1 means input is E2GO_TLV. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABZ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_IMPORT_KEY_INPUT_SIGNED_MSG}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
)(0u << 0)){\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit 0: set 0 means input is signed message. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACA" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_IMPORT_KEY_FLAGS_STRICT_OPERATION}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
)(1u << 7)){\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit 7: Strict: Request completed - New key written to NVM with updated MC. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACB" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_EXPORT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACD" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_ENCRYPT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 8))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_DECRYPT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 9))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_SIGN_MSG}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 10))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_VERIFY_MSG}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 11))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_SIGN_HASH}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 12))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_VERIFY_HASH}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 13))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_USAGE_DERIVE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 14))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_INFO_PERSISTENT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(0u << 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_INFO_PERMANENT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACN" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_INFO_TRANSIENT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_INFO_MASTER}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_INFO_KEK}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 3))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_KEY_GENERATION_FLAGS_STRICT_OPERATION}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_key_gen_flags_t}}}
)(1u << 7))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MANAGE_KEY_GROUP_FLAGS_CACHE_LOCKDOWN}}}
\~ ((hsm_op_manage_key_group_flags_t)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MANAGE_KEY_GROUP_FLAGS_CACHE_UNLOCK}}}
\~ ((hsm_op_manage_key_group_flags_t)(1u << 1)){\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Import the key group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MANAGE_KEY_GROUP_FLAGS_IMPORT}}}
\~ ((hsm_op_manage_key_group_flags_t)(1u << 2)){\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Export the key group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MANAGE_KEY_GROUP_FLAGS_EXPORT}}}
\~ ((hsm_op_manage_key_group_flags_t)(1u << 3))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MANAGE_KEY_GROUP_FLAGS_MONOTONIC}}}
\~ ((hsm_op_manage_key_group_flags_t)(1u << 5))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MANAGE_KEY_GROUP_FLAGS_SYNC_KEYSTORE}}}
\~ ((hsm_op_manage_key_group_flags_t)(1u << 6))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b HSM_OP_MANAGE_KEY_GROUP_FLAGS_STRICT_OPERATION}\~ ((hsm_op_manage_key_group_flags_t)(1u << 7)){\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_delete_key_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_group_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_key_gen_flags_t}}}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Reserverd Bits 0 - 6. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_management_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

typedef uint8_t {\b hsm_op_manage_key_group_flags_t}{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumerations\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_storage_loc_t}}}
 \{ {\b HSM_SE_KEY_STORAGE} = 0x00000000
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 hsm_storage_persist_lvl_t}}}
 \{ {\b HSM_VOLATILE_STORAGE} = 0x0,
{\b HSM_PERSISTENT_STORAGE} = 0x1,
{\b HSM_PERMANENT_STORAGE} = 0xFF
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifetime_t}}}
 \{ {\b HSM_SE_KEY_STORAGE_VOLATILE} = HSM_SE_KEY_STORAGE | HSM_VOLATILE_STORAGE,
{\b HSM_SE_KEY_STORAGE_PERSISTENT} = HSM_SE_KEY_STORAGE | HSM_PERSISTENT_STORAGE,
{\b HSM_SE_KEY_STORAGE_PERS_PERM} = HSM_SE_KEY_STORAGE | HSM_PERMANENT_STORAGE
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 hsm_pubkey_type_t}}}
 \{ {\b HSM_PUBKEY_TYPE_RSA} = 0x4001,
{\b HSM_PUBKEY_TYPE_ECC_BP_R1} = 0x4130,
{\b HSM_PUBKEY_TYPE_ECC_NIST} = 0x4112,
{\b HSM_PUBKEY_TYPE_ECC_BP_T1} = 0xC180
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_type_t}}}
 \{ {\b HSM_KEY_TYPE_HMAC} = 0x1100,
{\b HSM_KEY_TYPE_AES} = 0x2400,
{\b HSM_KEY_TYPE_SM4} = 0x2405,
{\b HSM_KEY_TYPE_RSA} = 0x7001,
{\b HSM_KEY_TYPE_ECC_BP_R1} = 0x7130,
{\b HSM_KEY_TYPE_ECC_NIST} = 0x7112
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_bit_key_sz_t}}}
 \{ {\b HSM_KEY_SIZE_HMAC_224} = 224,
{\b HSM_KEY_SIZE_HMAC_256} = 256,
{\b HSM_KEY_SIZE_HMAC_384} = 384,
{\b HSM_KEY_SIZE_HMAC_512} = 512,
{\b HSM_KEY_SIZE_AES_128} = 128,
{\b HSM_KEY_SIZE_AES_192} = 192,
{\b HSM_KEY_SIZE_AES_256} = 256,
{\b HSM_KEY_SIZE_SM4_128} = 128,
{\b HSM_KEY_SIZE_RSA_2048} = 2048,
{\b HSM_KEY_SIZE_RSA_3072} = 3072,
{\b HSM_KEY_SIZE_RSA_4096} = 4096,
{\b HSM_KEY_SIZE_ECC_BP_R1_224} = 224,
{\b HSM_KEY_SIZE_ECC_BP_R1_256} = 256,
{\b HSM_KEY_SIZE_ECC_BP_R1_320} = 320,
{\b HSM_KEY_SIZE_ECC_BP_R1_384} = 384,
{\b HSM_KEY_SIZE_ECC_BP_R1_512} = 512,
{\b HSM_KEY_SIZE_ECC_NIST_224} = 224,
{\b HSM_KEY_SIZE_ECC_NIST_256} = 256,
{\b HSM_KEY_SIZE_ECC_NIST_384} = 384,
{\b HSM_KEY_SIZE_ECC_NIST_521} = 521,
{\b HSM_KEY_SIZE_ECC_BP_T1_224} = 224,
{\b HSM_KEY_SIZE_ECC_BP_T1_256} = 256,
{\b HSM_KEY_SIZE_ECC_BP_T1_320} = 320,
{\b HSM_KEY_SIZE_ECC_BP_T1_384} = 384
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_permitted_algo_t}}}
 \{ {\b PERMITTED_ALGO_SHA224} = ALGO_HASH_SHA224,
{\b PERMITTED_ALGO_SHA256} = ALGO_HASH_SHA256,
{\b PERMITTED_ALGO_SHA384} = ALGO_HASH_SHA384,
{\b PERMITTED_ALGO_SHA512} = ALGO_HASH_SHA512,
{\b PERMITTED_ALGO_SM3} = ALGO_HASH_SM3,
{\b PERMITTED_ALGO_HMAC_SHA256} = ALGO_HMAC_SHA256,
{\b PERMITTED_ALGO_HMAC_SHA384} = ALGO_HMAC_SHA384,
{\b PERMITTED_ALGO_CMAC} = ALGO_CMAC,
{\b PERMITTED_ALGO_CTR} = ALGO_CIPHER_CTR,
{\b PERMITTED_ALGO_CFB} = ALGO_CIPHER_CFB,
{\b PERMITTED_ALGO_OFB} = ALGO_CIPHER_OFB,
{\b PERMITTED_ALGO_ECB_NO_PADDING} = ALGO_CIPHER_ECB_NO_PAD,
{\b PERMITTED_ALGO_CBC_NO_PADDING} = ALGO_CIPHER_CBC_NO_PAD,
{\b PERMITTED_ALGO_CCM} = ALGO_CCM,
{\b PERMITTED_ALGO_GCM} = ALGO_GCM,
{\b PERMITTED_ALGO_RSA_PKCS1_V15_SHA224} = ALGO_RSA_PKCS1_V15_SHA224,
{\b PERMITTED_ALGO_RSA_PKCS1_V15_SHA256} = ALGO_RSA_PKCS1_V15_SHA256,
{\b PERMITTED_ALGO_RSA_PKCS1_V15_SHA384} = ALGO_RSA_PKCS1_V15_SHA384,
{\b PERMITTED_ALGO_RSA_PKCS1_V15_SHA512} = ALGO_RSA_PKCS1_V15_SHA512,
{\b PERMITTED_ALGO_RSA_PKCS1_PSS_MGF1_SHA224} = ALGO_RSA_PKCS1_PSS_MGF1_SHA224,
{\b PERMITTED_ALGO_RSA_PKCS1_PSS_MGF1_SHA256} = ALGO_RSA_PKCS1_PSS_MGF1_SHA256,
{\b PERMITTED_ALGO_RSA_PKCS1_PSS_MGF1_SHA384} = ALGO_RSA_PKCS1_PSS_MGF1_SHA384,
{\b PERMITTED_ALGO_RSA_PKCS1_PSS_MGF1_SHA512} = ALGO_RSA_PKCS1_PSS_MGF1_SHA512,
{\b PERMITTED_ALGO_ECDSA_SHA224} = ALGO_ECDSA_SHA224,
{\b PERMITTED_ALGO_ECDSA_SHA256} = ALGO_ECDSA_SHA256,
{\b PERMITTED_ALGO_ECDSA_SHA384} = ALGO_ECDSA_SHA384,
{\b PERMITTED_ALGO_ECDSA_SHA512} = ALGO_ECDSA_SHA512,
{\b PERMITTED_ALGO_HMAC_KDF_SHA256} = ALGO_HMAC_KDF_SHA256,
{\b PERMITTED_ALGO_ALL_CIPHER} = ALGO_CIPHER_ALL,
{\b PERMITTED_ALGO_ALL_AEAD} = ALGO_ALL_AEAD,
{\b PERMITTED_ALGO_OTH_KEK_CBC} = ALGO_CIPHER_KEK_CBC
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifecycle_t}}}
 \{ {\b HSM_KEY_LIFECYCLE_OPEN} = 0x1,
{\b HSM_KEY_LIFECYCLE_CLOSED} = 0x2,
{\b HSM_KEY_LIFECYCLE_CLOSED_LOCKED} = 0x4
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_delete_key}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_management_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 op_delete_key_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADM" }{}}{\fldrslt {\cs37\ul\cf2 hsm_get_key_attr}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_management_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 op_get_key_attr_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADN" }{}}{\fldrslt {\cs37\ul\cf2 hsm_import_key}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_management_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 op_import_key_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADO" }{}}{\fldrslt {\cs37\ul\cf2 hsm_generate_key_ext}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_management_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_key_ext_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADP" }{}}{\fldrslt {\cs37\ul\cf2 hsm_generate_key}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_management_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_key_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_key_management_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_key_management_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *key_management_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_key_management_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_management_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADS" }{}}{\fldrslt {\cs37\ul\cf2 hsm_manage_key_group}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_management_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 op_manage_key_group_args_t}}}
 *args)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The entire key group will be cached in the HSM local memory. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_delete_key_args_t}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_delete_key_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the delete key operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for the operation. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_delete_key_flags_t}}}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation properties. }\cell }{\row }
}
{\xe \v op_get_key_attr_args_t}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_get_key_attr_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the get key attribute operation arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for the operation. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_type_t}}}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\cell }{key_type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates which type of key must be generated. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_bit_key_sz_t}}}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\cell }{bit_key_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates key security size in bits. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifetime_t}}}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\cell }{key_lifetime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
this attribute comprises of two indicaters-key persistence level and location where the key is stored. \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\cell }{key_usage\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the cryptographic operations that key can execute. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_permitted_algo_t}}}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\cell }{permitted_algo\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the key permitted algorithm. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifecycle_t}}}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\cell }{lifecycle\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the device lifecycle in which key is usable. }\cell }{\row }
}
{\xe \v op_import_key_args_t}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_import_key_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the import key operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Identifier of the KEK used to encrypt the key to be imported (Ignored if KEK is not used as set as part of "flags" field). \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\cell }{input_lsb_addr\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Address in the requester space where:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
EdgeLock 2GO TLV can be found.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Ignore this field if not E2GO_TLV. \par}
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\cell }{input_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Size in bytes of:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
EdgeLock 2GO TLV can be found.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Ignore this field if not E2GO_TLV. \par}
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation properties. }\cell }{\row }
}
{\xe \v kek_enc_key_hdr_t}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct kek_enc_key_hdr_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the encryption key header \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\cell }{iv[IV_LENGTH]\cell }{\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\cell }{key\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\cell }{tag\cell }{\cell }{\row }
}
{\xe \v op_generate_key_ext_args_t}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_generate_key_ext_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the key generate operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t *{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the identifier of the key to be used for the operation In case of create operation the new key identifier will be stored in this location \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\cell }{out_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the generated key It must be 0 in case of symmetric keys \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_key_gen_flags_t}}}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation properties }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_type_t}}}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\cell }{key_type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates which type of key must be generated }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_group_t}}}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\cell }{key_group\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Key group of the generated key. It must be a value in the range 0-1023. Keys belonging to the same group can be cached in the HSM local memory through the hsm_manage_key_group API \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\cell }{key_info\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the properties of the key }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\cell }{out_key\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area where the generated public key must be written. \par
}\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\cell }{min_mac_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
min mac length in bits to be set for this key, value 0 indicates use default (see {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 op_mac_one_go_args_t}}} for more details). Only accepted for keys that can be used for mac operations, must not be larger than maximum mac size that can be performed with the key. When in FIPS approved mode values < 32 bits are not allowed. \par
}\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\cell }{reserved[3]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
It must be 0. }\cell }{\row }
}
{\xe \v op_generate_key_args_t}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_generate_key_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the generate key operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t *{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the identifier of the key to be used for the operation. In case of create operation the new key identifier will be stored in this location. \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\cell }{out_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the generated key.It must be 0 in case of symmetric keys. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_key_gen_flags_t}}}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation properties. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_type_t}}}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\cell }{key_type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates which type of key must be generated. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_group_t}}}
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\cell }{key_group\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Key group of the generated key. It must be a value in the range 0-1023. Keys belonging to the same group can be cached in the HSM local memory through the hsm_manage_key_group API. \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\cell }{out_key\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area where the generated public key must be written. \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\cell }{exp_out_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected output key buffer size, valid in case of HSM_OUT_TOO_SMALL (0x1D) error code \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_bit_key_sz_t}}}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\cell }{bit_key_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates key security size in bits. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifecycle_t}}}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\cell }{key_lifecycle\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
defines the key lifecycle in which the key is usable. If it is set to 0, current key lifecycle is used. \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifetime_t}}}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\cell }{key_lifetime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
this attribute comprises of two indicaters-key persistence level and location where the key is stored. \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\cell }{key_usage\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the cryptographic operations that key can execute. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_permitted_algo_t}}}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
\cell }{permitted_algo\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the key permitted algorithm. }\cell }{\row }
}
{\xe \v open_svc_key_management_args_t}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_svc_key_management_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the key management open service member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\cell }{key_management_hdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
handle identifying the key management service flow }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_management_flags_t}}}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the services properties. }\cell }{\row }
}
{\xe \v op_manage_key_group_args_t}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_manage_key_group_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_group_t}}}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\cell }{key_group\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
It must be a value in the range 0-1023. Keys belonging to the same group can be cached in the HSM local memory through the hsm_manage_key_group API. \par
}\cell }{\row }
{\qr hsm_op_manage_key_group_flags_t{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation properties. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\cell }{reserved\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_OP_DEL_KEY_FLAGS_STRICT_OPERATION\:Key management}
{\xe \v Key management\:HSM_OP_DEL_KEY_FLAGS_STRICT_OPERATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_DEL_KEY_FLAGS_STRICT_OPERATION\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
)(1u << 7))}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap detailing the delete key operation properties. Bit 0-6: Reserved. Bit 7: Strict: Request completed - New key written to NVM with updated MC. \par
}}
{\xe \v HSM_KEY_USAGE_EXPORT\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_EXPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_EXPORT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 0))}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to export the key \par
}}
{\xe \v HSM_KEY_USAGE_ENCRYPT\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_ENCRYPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_ENCRYPT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 8))}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to encrypt a message with the key \par
}}
{\xe \v HSM_KEY_USAGE_DECRYPT\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_DECRYPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_DECRYPT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 9))}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to decrypt a message with the key \par
}}
{\xe \v HSM_KEY_USAGE_SIGN_MSG\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_SIGN_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_SIGN_MSG\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 10))}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to sign a message with the key \par
}}
{\xe \v HSM_KEY_USAGE_VERIFY_MSG\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_VERIFY_MSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_VERIFY_MSG\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 11))}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to verify a message signature with the key \par
}}
{\xe \v HSM_KEY_USAGE_SIGN_HASH\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_SIGN_HASH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_SIGN_HASH\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 12))}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to sign a hashed message with the key \par
}}
{\xe \v HSM_KEY_USAGE_VERIFY_HASH\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_VERIFY_HASH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_VERIFY_HASH\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 13))}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to verify a hashed message signature with the key \par
}}
{\xe \v HSM_KEY_USAGE_DERIVE\:Key management}
{\xe \v Key management\:HSM_KEY_USAGE_DERIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_USAGE_DERIVE\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
) (1u << 14))}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the permission to derive other keys from this key \par
}}
{\xe \v HSM_KEY_INFO_PERSISTENT\:Key management}
{\xe \v Key management\:HSM_KEY_INFO_PERSISTENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_INFO_PERSISTENT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(0u << 1))}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating persistent keys which are stored in the external NVM. The entire key group is written in the NVM at the next STRICT operation. \par
}}
{\xe \v HSM_KEY_INFO_PERMANENT\:Key management}
{\xe \v Key management\:HSM_KEY_INFO_PERMANENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_INFO_PERMANENT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the key is permanent. When set, the key is permanent (write locked). Once created, it will not be possible to update or delete the key anymore. Transient keys will be anyway deleted after a PoR or when the corresponding key store service flow is closed. This bit can never be reset. \par
}}
{\xe \v HSM_KEY_INFO_TRANSIENT\:Key management}
{\xe \v Key management\:HSM_KEY_INFO_TRANSIENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_INFO_TRANSIENT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 1))}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the key is transient. Transient keys are deleted when the corresponding key store service flow is closed or after a PoR. Transient keys cannot be in the same key group than persistent keys. \par
}}
{\xe \v HSM_KEY_INFO_MASTER\:Key management}
{\xe \v Key management\:HSM_KEY_INFO_MASTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_INFO_MASTER\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 2))}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the key is master key. When set, the key is considered as a master key. Only master keys can be used as input of key derivation functions (i.e butterfly key expansion). \par
}}
{\xe \v HSM_KEY_INFO_KEK\:Key management}
{\xe \v Key management\:HSM_KEY_INFO_KEK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_KEY_INFO_KEK\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
)(1u << 3))}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the key is key encryption key When set, the key is considered as a key encryption key. KEK keys can only be used to wrap and import other keys into the key store, all other operation are not allowed. Only keys imported in the key store through the hsm_mange_key API can get this attribute. \par
}}
{\xe \v HSM_OP_KEY_GENERATION_FLAGS_STRICT_OPERATION\:Key management}
{\xe \v Key management\:HSM_OP_KEY_GENERATION_FLAGS_STRICT_OPERATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_KEY_GENERATION_FLAGS_STRICT_OPERATION\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_key_gen_flags_t}}}
)(1u << 7))}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The request is completed only when the new key has been written in the NVM. This applicable for persistent key only. \par
}}
{\xe \v HSM_OP_MANAGE_KEY_GROUP_FLAGS_CACHE_LOCKDOWN\:Key management}
{\xe \v Key management\:HSM_OP_MANAGE_KEY_GROUP_FLAGS_CACHE_LOCKDOWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_MANAGE_KEY_GROUP_FLAGS_CACHE_LOCKDOWN\~ ((hsm_op_manage_key_group_flags_t)(1u << 0))}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
HSM may export the key group in the external NVM to free up the local memory. HSM will copy the key group in the local memory again in case of key group usage/update. \par
}}
{\xe \v HSM_OP_MANAGE_KEY_GROUP_FLAGS_EXPORT\:Key management}
{\xe \v Key management\:HSM_OP_MANAGE_KEY_GROUP_FLAGS_EXPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_MANAGE_KEY_GROUP_FLAGS_EXPORT\~ ((hsm_op_manage_key_group_flags_t)(1u << 3))}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
When used in conjunction with SYNC key group or SYNC key store and storage only, the request is completed only when the monotonic counter has been updated. \par
}}
{\xe \v HSM_OP_MANAGE_KEY_GROUP_FLAGS_MONOTONIC\:Key management}
{\xe \v Key management\:HSM_OP_MANAGE_KEY_GROUP_FLAGS_MONOTONIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_MANAGE_KEY_GROUP_FLAGS_MONOTONIC\~ ((hsm_op_manage_key_group_flags_t)(1u << 5))}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The request is completed only when the update has been written in the NVM. Not applicable for cache lockdown/unlock. \par
}}
{\xe \v HSM_OP_MANAGE_KEY_GROUP_FLAGS_SYNC_KEYSTORE\:Key management}
{\xe \v Key management\:HSM_OP_MANAGE_KEY_GROUP_FLAGS_SYNC_KEYSTORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_MANAGE_KEY_GROUP_FLAGS_SYNC_KEYSTORE\~ ((hsm_op_manage_key_group_flags_t)(1u << 6))}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The request is completed only when the update has been written in the NVM. Not applicable for cache lockdown/unlock. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_op_delete_key_flags_t\:Key management}
{\xe \v Key management\:hsm_op_delete_key_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_delete_key_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap describing the delete key operation properties \par
}}
{\xe \v hsm_op_import_key_flags_t\:Key management}
{\xe \v Key management\:hsm_op_import_key_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_import_key_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the import key operation supported properties Bit 0: Defines input configuration Bit 1-6: Reserved Bit 7: Strict \par
}}
{\xe \v hsm_key_usage_t\:Key management}
{\xe \v Key management\:hsm_key_usage_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_usage_t}}}
}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap indicating the cryptographic operations that key can execute \par
}}
{\xe \v hsm_key_group_t\:Key management}
{\xe \v Key management\:hsm_key_group_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_group_t}}}
}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the key group \par
}}
{\xe \v hsm_key_info_t\:Key management}
{\xe \v Key management\:hsm_key_info_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_info_t}}}
}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the key information \par
}}
{\xe \v hsm_op_key_gen_flags_t\:Key management}
{\xe \v Key management\:hsm_op_key_gen_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_key_gen_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Reserverd Bits 0 - 6. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the key generate operation supported properties. \par
}}
{\xe \v hsm_svc_key_management_flags_t\:Key management}
{\xe \v Key management\:hsm_svc_key_management_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_management_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the key management service supported properties \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumeration Type Documentation\par
\pard\plain
{\xe \v hsm_storage_loc_t\:Key management}
{\xe \v Key management\:hsm_storage_loc_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_storage_loc_t}}}
}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum Indicating the key location indicator. \par
}}
{\xe \v hsm_storage_persist_lvl_t\:Key management}
{\xe \v Key management\:hsm_storage_persist_lvl_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 hsm_storage_persist_lvl_t}}}
}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum Indicating the key persistent level indicator. \par
}}
{\xe \v hsm_key_lifetime_t\:Key management}
{\xe \v Key management\:hsm_key_lifetime_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifetime_t}}}
}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum Indicating the key lifetime. \par
}}
{\xe \v hsm_pubkey_type_t\:Key management}
{\xe \v Key management\:hsm_pubkey_type_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 hsm_pubkey_type_t}}}
}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum Indicating the public key type. \par
}}
{\xe \v hsm_key_type_t\:Key management}
{\xe \v Key management\:hsm_key_type_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_type_t}}}
}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum Indicating the key type. \par
}}
{\xe \v hsm_bit_key_sz_t\:Key management}
{\xe \v Key management\:hsm_bit_key_sz_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_bit_key_sz_t}}}
}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum Indicating the key security size in bits. \par
}}
{\xe \v hsm_permitted_algo_t\:Key management}
{\xe \v Key management\:hsm_permitted_algo_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_permitted_algo_t}}}
}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum describing the permiteed algorithm \par
}}
{\xe \v hsm_key_lifecycle_t\:Key management}
{\xe \v Key management\:hsm_key_lifecycle_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_lifecycle_t}}}
}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum detailing Permitted key lifecycle \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_delete_key\:Key management}
{\xe \v Key management\:hsm_delete_key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_delete_key ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_management_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABO" }{}}{\fldrslt {\cs37\ul\cf2 op_delete_key_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This command is designed to perform the following operations:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
delete an existing key\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{handle identifying the key management service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_get_key_attr\:Key management}
{\xe \v Key management\:hsm_get_key_attr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_get_key_attr ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_management_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABP" }{}}{\fldrslt {\cs37\ul\cf2 op_get_key_attr_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This command is designed to perform the following operations:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
get attributes of an existing key\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{handle identifying the key management service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_import_key\:Key management}
{\xe \v Key management\:hsm_import_key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_import_key ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_management_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABQ" }{}}{\fldrslt {\cs37\ul\cf2 op_import_key_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This API will be used to Import the key \par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{handle identifying the key management service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_generate_key_ext\:Key management}
{\xe \v Key management\:hsm_generate_key_ext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_generate_key_ext ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_management_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABS" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_key_ext_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Generate a key or a key pair with extended settings. Basic operation is identical to hsm_generate_key, but accepts additional settings. Currently the min_mac_len is the only additional setting accepted.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{handle identifying the key management service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_generate_key\:Key management}
{\xe \v Key management\:hsm_generate_key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_generate_key ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_management_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABT" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_key_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Generate a key or a key pair. Only the confidential keys (symmetric and private keys) are stored in the internal key store, while the non-confidential keys (public key) are exported.\par
The generated key can be stored using a new or existing key identifier with the restriction that an existing key can be replaced only by a key of the same type.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{handle identifying the key management service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_open_key_management_service\:Key management}
{\xe \v Key management\:hsm_open_key_management_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_key_management_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_key_management_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i key_management_hdl})}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Open a key management service flow\par
User must open this service flow in order to perform operation on the key store keys (generate, update, delete)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{pointer to where the key management service flow handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code. \par
}}}}
{\xe \v hsm_close_key_management_service\:Key management}
{\xe \v Key management\:hsm_close_key_management_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_key_management_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_management_hdl})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Terminate a previously opened key management service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{handle identifying the key management service flow.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_manage_key_group\:Key management}
{\xe \v Key management\:hsm_manage_key_group}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_manage_key_group ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_management_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 op_manage_key_group_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The entire key group will be cached in the HSM local memory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This command is designed to perform the following operations:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
lock/unlock down a key group in the HSM local memory so that the keys are available to the HSM without additional latency\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
un-lock a key group. HSM may export the key group into the external NVM to free up local memory as needed\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
delete an existing key group\par}
User can call this function only after having opened a key management service flow.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_management_hdl} \cell }{handle identifying the key management service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Ciphering\par \pard\plain
{\tc\tcl2 \v Ciphering}
{\xe \v Ciphering}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Modules\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFL" }{}}{\fldrslt {\cs37\ul\cf2 IMX8ULP}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 op_auth_enc_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_cipher_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 op_cipher_one_go_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFP" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AUTH_ENC_FLAGS_DECRYPT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(0u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFR" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AUTH_ENC_FLAGS_ENCRYPT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFS" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AUTH_ENC_FLAGS_GENERATE_FULL_IV}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(1u << 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFT" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AUTH_ENC_FLAGS_GENERATE_COUNTER_IV}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(1u << 2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CIPHER_ONE_GO_FLAGS_DECRYPT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_flags_t}}}
)(0u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CIPHER_ONE_GO_FLAGS_ENCRYPT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_flags_t}}}
)(1u << 0))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_cipher_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_flags_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumerations\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_algo_t}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFZ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AEAD_ALGO_CCM}}}
 = ALGO_CCM,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGA" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AEAD_ALGO_GCM}}}
 = ALGO_GCM,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AEAD_ALGO_ALL_AEAD}}}
 = ALGO_ALL_AEAD
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_algo_t}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGD" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CIPHER_ONE_GO_ALGO_CTR}}}
 = ALGO_CIPHER_CTR,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGE" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CIPHER_ONE_GO_ALGO_CFB}}}
 = ALGO_CIPHER_CFB,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGF" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CIPHER_ONE_GO_ALGO_OFB}}}
 = ALGO_CIPHER_OFB,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGG" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CIPHER_ONE_GO_ALGO_ECB}}}
 = ALGO_CIPHER_ECB_NO_PAD,
{\b HSM_CIPHER_ONE_GO_ALGO_CBC} = ALGO_CIPHER_CBC_NO_PAD
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_do_cipher}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 cipher_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 op_cipher_one_go_args_t}}}
 *cipher_one_go)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_auth_enc}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 cipher_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 op_auth_enc_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_cipher_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_cipher_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *cipher_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_cipher_one_go}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 cipher_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 op_cipher_one_go_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_cipher_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 cipher_hdl)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_auth_enc_args_t}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_auth_enc_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the authenticated encryption operation arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for the operation }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\cell }{iv\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the user supplied part of initialization vector or nonce, when applicable, otherwise 0 \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\cell }{iv_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the fixed part of the initialization vector for encryption (0 or 4 bytes), length in bytes of the full IV for decryption (12 bytes) \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\cell }{aad\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the additional authentication data }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\cell }{aad_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the additional authentication data }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_algo_t}}}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\cell }{ae_algo\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
algorithm to be used for the operation }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation attributes }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\cell }{input\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input area\par
 plaintext for encryption\par
 Ciphertext + Tag (16 bytes) for decryption \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\cell }{output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area\par
 Ciphertext + Tag (16 bytes){
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
IV for encryption\par
 plaintext for decryption if the Tag is verified \par}
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\cell }{input_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the input }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\cell }{output_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the output }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\cell }{exp_output_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected output buffer size in bytes, valid in case of HSM_OUT_TOO_SMALL (0x1D) error code \par
}\cell }{\row }
}
{\xe \v open_svc_cipher_args_t}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_svc_cipher_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the open cipher service members \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\cell }{cipher_hdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
handle identifying the cipher service flow }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the services properties }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\cell }{reserved[3]\cell }{\cell }{\row }
}
{\xe \v op_cipher_one_go_args_t}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_cipher_one_go_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the cipher one go operation arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for the operation }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\cell }{iv\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the initialization vector (nonce in case of AES CCM) }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\cell }{iv_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the initialization vector. it must be 0 for algorithms not using the initialization vector. It must be 12 for AES in CCM mode \par
}\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\cell }{svc_flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the services properties. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation attributes }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\cell }{cipher_algo\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
algorithm to be used for the operation }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\cell }{input\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input area:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
plaintext for encryption\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
ciphertext for decryption Note: In case of CCM it is the purported ciphertext. \par}
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\cell }{output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
ciphertext for encryption Note: In case of CCM it is the output of the generation-encryption process.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
plaintext for decryption \par}
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\cell }{input_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the input.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
In case of CBC and ECB, the input size should be multiple of a block cipher size (16 bytes). \par}
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\cell }{output_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the output }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\cell }{exp_output_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected output buffer size in bytes, valid in case of (0x1D) error code }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_AUTH_ENC_FLAGS_DECRYPT\:Ciphering}
{\xe \v Ciphering\:HSM_AUTH_ENC_FLAGS_DECRYPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_AUTH_ENC_FLAGS_DECRYPT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(0u << 0))}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the decryption operation \par
}}
{\xe \v HSM_AUTH_ENC_FLAGS_ENCRYPT\:Ciphering}
{\xe \v Ciphering\:HSM_AUTH_ENC_FLAGS_ENCRYPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_AUTH_ENC_FLAGS_ENCRYPT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the encryption operation \par
}}
{\xe \v HSM_AUTH_ENC_FLAGS_GENERATE_FULL_IV\:Ciphering}
{\xe \v Ciphering\:HSM_AUTH_ENC_FLAGS_GENERATE_FULL_IV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_AUTH_ENC_FLAGS_GENERATE_FULL_IV\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(1u << 1))}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the Full IV is internally generated (only relevant for encryption) \par
}}
{\xe \v HSM_AUTH_ENC_FLAGS_GENERATE_COUNTER_IV\:Ciphering}
{\xe \v Ciphering\:HSM_AUTH_ENC_FLAGS_GENERATE_COUNTER_IV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_AUTH_ENC_FLAGS_GENERATE_COUNTER_IV\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
)(1u << 2))}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating 4 bytes supplied other bytes internally generated (only relevant for encryption) \par
}}
{\xe \v HSM_CIPHER_ONE_GO_FLAGS_DECRYPT\:Ciphering}
{\xe \v Ciphering\:HSM_CIPHER_ONE_GO_FLAGS_DECRYPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_CIPHER_ONE_GO_FLAGS_DECRYPT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_flags_t}}}
)(0u << 0))}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the decrypt operation \par
}}
{\xe \v HSM_CIPHER_ONE_GO_FLAGS_ENCRYPT\:Ciphering}
{\xe \v Ciphering\:HSM_CIPHER_ONE_GO_FLAGS_ENCRYPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_CIPHER_ONE_GO_FLAGS_ENCRYPT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_flags_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the encrypt operation \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_op_auth_enc_flags_t\:Ciphering}
{\xe \v Ciphering\:hsm_op_auth_enc_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the authenticated encryption operations \par
}}
{\xe \v hsm_svc_cipher_flags_t\:Ciphering}
{\xe \v Ciphering\:hsm_svc_cipher_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_cipher_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field describing the open cipher service requested operation \par
}}
{\xe \v hsm_op_cipher_one_go_flags_t\:Ciphering}
{\xe \v Ciphering\:hsm_op_cipher_one_go_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the requested operations \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumeration Type Documentation\par
\pard\plain
{\xe \v hsm_op_auth_enc_algo_t\:Ciphering}
{\xe \v Ciphering\:hsm_op_auth_enc_algo_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_auth_enc_algo_t}}}
}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the supported algorithm \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HSM_AEAD_ALGO_CCM\:Ciphering}
{\xe \v Ciphering\:HSM_AEAD_ALGO_CCM}
{\qr HSM_AEAD_ALGO_CCM{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
CCM (AES CCM) \par
}\cell }{\row }
{\xe \v HSM_AEAD_ALGO_GCM\:Ciphering}
{\xe \v Ciphering\:HSM_AEAD_ALGO_GCM}
{\qr HSM_AEAD_ALGO_GCM{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
GCM (AES GCM) \par
}\cell }{\row }
{\xe \v HSM_AEAD_ALGO_ALL_AEAD\:Ciphering}
{\xe \v Ciphering\:HSM_AEAD_ALGO_ALL_AEAD}
{\qr HSM_AEAD_ALGO_ALL_AEAD{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
ALL AEAD (ALL AEAD) \par
}\cell }{\row }
}
}
{\xe \v hsm_op_cipher_one_go_algo_t\:Ciphering}
{\xe \v Ciphering\:hsm_op_cipher_one_go_algo_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_cipher_one_go_algo_t}}}
}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum describing the cipher one go operation algorithm \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HSM_CIPHER_ONE_GO_ALGO_CTR\:Ciphering}
{\xe \v Ciphering\:HSM_CIPHER_ONE_GO_ALGO_CTR}
{\qr HSM_CIPHER_ONE_GO_ALGO_CTR{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
CTR (AES supported). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
CFB (AES supported). \par
}\cell }{\row }
{\xe \v HSM_CIPHER_ONE_GO_ALGO_CFB\:Ciphering}
{\xe \v Ciphering\:HSM_CIPHER_ONE_GO_ALGO_CFB}
{\qr HSM_CIPHER_ONE_GO_ALGO_CFB{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
OFB (AES supported). \par
}\cell }{\row }
{\xe \v HSM_CIPHER_ONE_GO_ALGO_OFB\:Ciphering}
{\xe \v Ciphering\:HSM_CIPHER_ONE_GO_ALGO_OFB}
{\qr HSM_CIPHER_ONE_GO_ALGO_OFB{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
ECB no padding (AES, SM4 supported). \par
}\cell }{\row }
{\xe \v HSM_CIPHER_ONE_GO_ALGO_ECB\:Ciphering}
{\xe \v Ciphering\:HSM_CIPHER_ONE_GO_ALGO_ECB}
{\qr HSM_CIPHER_ONE_GO_ALGO_ECB{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
CBC no padding (AES, SM4 supported). \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_do_cipher\:Ciphering}
{\xe \v Ciphering\:hsm_do_cipher}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_do_cipher ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i cipher_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 op_cipher_one_go_args_t}}}
 *  {\i cipher_one_go})}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to perform ciphering operation\par
 This API does the following:{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
1.\tab Open an Cipher Service Flow\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
2.\tab Perform ciphering operation\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
3.\tab Terminate a previously opened cipher service flow\par
 User can call this function only after having opened a cipher service flow.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cipher_hdl} \cell }{handle identifying the cipher service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cipher_one_go} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
{\xe \v hsm_auth_enc\:Ciphering}
{\xe \v Ciphering\:hsm_auth_enc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_auth_enc ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i cipher_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 op_auth_enc_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Perform authenticated encryption operation\par
User can call this function only after having opened a cipher service flow\par
 For decryption operations, the full IV is supplied by the caller via the iv and iv_size parameters. HSM_AUTH_ENC_FLAGS_GENERATE_FULL_IV and HSM_AUTH_ENC_FLAGS_GENERATE_COUNTER_IV flags are ignored.\par
 For encryption operations, either HSM_AUTH_ENC_FLAGS_GENERATE_FULL_IV or HSM_AUTH_ENC_FLAGS_GENERATE_COUNTER_IV must be set when calling this function:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
When HSM_AUTH_ENC_FLAGS_GENERATE_FULL_IV is set, the full IV is internally generated, iv and iv_size must be set to 0\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
When HSM_AUTH_ENC_FLAGS_GENERATE_COUNTER_IV is set, the user supplies a 4 byte fixed part of the IV. The other IV bytes are internally generated\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cipher_hdl} \cell }{handle identifying the cipher service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_open_cipher_service\:Ciphering}
{\xe \v Ciphering\:hsm_open_cipher_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_cipher_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_cipher_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i cipher_hdl})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Open a cipher service flow.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
User can call this function only after having opened a key-store service flow.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
User must open this service in order to perform cipher operation.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cipher_hdl} \cell }{pointer to where the cipher service flow handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_cipher_one_go\:Ciphering}
{\xe \v Ciphering\:hsm_cipher_one_go}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_cipher_one_go ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i cipher_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 op_cipher_one_go_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Perform ciphering operation\par
User can call this function only after having opened a cipher service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cipher_hdl} \cell }{handle identifying the cipher service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_close_cipher_service\:Ciphering}
{\xe \v Ciphering\:hsm_close_cipher_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_cipher_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i cipher_hdl})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Terminate a previously opened cipher service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cipher_hdl} \cell }{pointer to handle identifying the cipher service flow to be closed.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Signature generation\par \pard\plain
{\tc\tcl2 \v Signature generation}
{\xe \v Signature generation}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_sign_gen_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_sign_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 op_prepare_sign_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHQ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_generate_sign_flags_t}}}
)(0u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_GENERATE_SIGN_FLAGS_INPUT_MESSAGE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_generate_sign_flags_t}}}
)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_PREPARE_SIGN_INPUT_DIGEST}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_prepare_signature_flags_t}}}
)(0u << 0)){\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating input digest. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHV" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_PREPARE_SIGN_INPUT_MESSAGE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_prepare_signature_flags_t}}}
)(1u << 0)){\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating input message. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_PREPARE_SIGN_COMPRESSED_POINT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_prepare_signature_flags_t}}}
)(1u << 1)){\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating compressed point. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_generate_sign_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_prepare_signature_flags_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumerations\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_signature_scheme_id_t}}}
 \{ {\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_V15_SHA224} = 0x06000208,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_V15_SHA256} = 0x06000209,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_V15_SHA384} = 0x0600020A,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_V15_SHA512} = 0x0600020B,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_V15_ANY_HASH} = 0x060002FF,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_PSS_MGF1_SHA224} = 0x06000308,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_PSS_MGF1_SHA256} = 0x06000309,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_PSS_MGF1_SHA384} = 0x0600030A,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_PSS_MGF1_SHA512} = 0x0600030B,
{\b HSM_SIGNATURE_SCHEME_RSA_PKCS1_PSS_MGF1_ANY_HASH} = 0x060003FF,
{\b HSM_SIGNATURE_SCHEME_ECDSA_ANY} = 0x06000600,
{\b HSM_SIGNATURE_SCHEME_ECDSA_SHA224} = 0x06000608,
{\b HSM_SIGNATURE_SCHEME_ECDSA_SHA256} = 0x06000609,
{\b HSM_SIGNATURE_SCHEME_ECDSA_SHA384} = 0x0600060A,
{\b HSM_SIGNATURE_SCHEME_ECDSA_SHA512} = 0x0600060B
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_do_sign}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_sign_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_signature_generation_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_sign_gen_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *signature_gen_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_signature_generation_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 signature_gen_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_generate_signature}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 signature_gen_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_sign_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_prepare_signature}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 signature_gen_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 op_prepare_sign_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v open_svc_sign_gen_args_t}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_svc_sign_gen_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure to represent the generate sign open service arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
\cell }{signature_gen_hdl\cell }{\cell }{\row }
}
{\xe \v op_generate_sign_args_t}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_generate_sign_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure to represent the generate sign operation arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for the operation }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\cell }{message\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input (message or message digest) to be signed }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\cell }{signature\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area where the signature must be stored. The signature S=(r,s) is stored in format r||s||Ry where:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Ry is an additional byte containing the lsb of y. Ry has to be considered valid only if the HSM_OP_GENERATE_SIGN_FLAGS_COMPRESSED_POINT is set. \par}
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\cell }{signature_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the output. After signature generation operation, this field will contain the expected signature buffer size, if operation failed due to provided output buffer size being too short. \par
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
\cell }{message_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the input }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_signature_scheme_id_t}}}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
\cell }{scheme_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the digital signature scheme to be used for the operation \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
\cell }{salt_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Salt length in bytes. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\cell }{exp_signature_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected signature buffer size for output, returned by FW in case the input signature size provided is less than the required size. \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_generate_sign_flags_t}}}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation attributes }\cell }{\row }
}
{\xe \v op_prepare_sign_args_t}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_prepare_sign_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the prepare signature operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_signature_scheme_id_t}}}
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
\cell }{scheme_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the digital signature scheme to be used for the operation. \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_prepare_signature_flags_t}}}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation attributes }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST\:Signature generation}
{\xe \v Signature generation\:HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_generate_sign_flags_t}}}
)(0u << 0))}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the input is the message digest \par
}}
{\xe \v HSM_OP_GENERATE_SIGN_FLAGS_INPUT_MESSAGE\:Signature generation}
{\xe \v Signature generation\:HSM_OP_GENERATE_SIGN_FLAGS_INPUT_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_GENERATE_SIGN_FLAGS_INPUT_MESSAGE\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_generate_sign_flags_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the input is the actual message \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_op_generate_sign_flags_t\:Signature generation}
{\xe \v Signature generation\:hsm_op_generate_sign_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_generate_sign_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the requested operation \par
}}
{\xe \v hsm_op_prepare_signature_flags_t\:Signature generation}
{\xe \v Signature generation\:hsm_op_prepare_signature_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_prepare_signature_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the prepare signature operation supported attributes \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumeration Type Documentation\par
\pard\plain
{\xe \v hsm_signature_scheme_id_t\:Signature generation}
{\xe \v Signature generation\:hsm_signature_scheme_id_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_signature_scheme_id_t}}}
}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the PSA compliant requested operations: Bit 2 to 7: Reserved. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_do_sign\:Signature generation}
{\xe \v Signature generation\:hsm_do_sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_do_sign ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_sign_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to generate signature on the given message.\par
 This API does the following:{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
1.\tab Open a service flow for signature generation.\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
2.\tab Based on the flag to identify the type of message: Digest or actual message,\par
 generate the signature using the key corresponding to the key id.\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
3.\tab Post performing the operation, terminate the previously opened\par
 signature-generation service flow.\par
 User can call this function only after having opened a key-store.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the current key-store. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
{\xe \v hsm_open_signature_generation_service\:Signature generation}
{\xe \v Signature generation\:hsm_open_signature_generation_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_signature_generation_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_sign_gen_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i signature_gen_hdl})}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Open a signature generation service flow\par
User can call this function only after having opened a key store service flow.\par
User must open this service in order to perform signature generation operations.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i signature_gen_hdl} \cell }{pointer to where the signature generation service flow handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_close_signature_generation_service\:Signature generation}
{\xe \v Signature generation\:hsm_close_signature_generation_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_signature_generation_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i signature_gen_hdl})}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Terminate a previously opened signature generation service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i signature_gen_hdl} \cell }{handle identifying the signature generation service flow to be closed.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_generate_signature\:Signature generation}
{\xe \v Signature generation\:hsm_generate_signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_generate_signature ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i signature_gen_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_sign_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Generate a digital signature according to the signature scheme User can call this function only after having opened a signature generation service flow.\par
The signature S=(r,s) is stored in the format r||s||Ry where:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Ry is an additional byte containing the lsb of y. Ry has to be considered valid only if the HSM_OP_GENERATE_SIGN_FLAGS_COMPRESSED_POINT is set.\par}
In case of HSM_SIGNATURE_SCHEME_DSA_SM2_FP_256_SM3, message of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHO" }{}}{\fldrslt {\cs37\ul\cf2 op_generate_sign_args_t}}} should be (as specified in GB/T 32918):{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
equal to Z||M in case of HSM_OP_GENERATE_SIGN_FLAGS_INPUT_MESSAGE\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
equal to SM3(Z||M) in case of HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i signature_gen_hdl} \cell }{handle identifying the signature generation service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_prepare_signature\:Signature generation}
{\xe \v Signature generation\:hsm_prepare_signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_prepare_signature ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i signature_gen_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 op_prepare_sign_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Prepare the creation of a signature by pre-calculating the operations having not dependencies on the input message.\par
The pre-calculated value will be stored internally and used once call hsm_generate_signature. Up to 20 pre-calculated values can be stored, additional preparation operations will have no effects.\par
User can call this function only after having opened a signature generation service flow.\par
The signature S=(r,s) is stored in the format r||s||Ry where:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Ry is an additional byte containing the lsb of y, Ry has to be considered valid only if the HSM_OP_PREPARE_SIGN_COMPRESSED_POINT is set.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i signature_gen_hdl} \cell }{handle identifying the signature generation service flow \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Signature verification\par \pard\plain
{\tc\tcl2 \v Signature verification}
{\xe \v Signature verification}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_sign_ver_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 op_verify_sign_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIS" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(0u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIU" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_VERIFY_SIGN_FLAGS_INPUT_MESSAGE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIV" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_VERIFY_SIGN_FLAGS_COMPRESSED_POINT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(1u << 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_VERIFY_SIGN_FLAGS_KEY_INTERNAL}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(1u << 2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIX" }{}}{\fldrslt {\cs37\ul\cf2 HSM_VERIFICATION_STATUS_SUCCESS}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
)(0x5A3CC3A5u))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIZ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_VERIFICATION_STATUS_FAILURE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
)(0x2B4DD4B2u))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verify_sign}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 op_verify_sign_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
 *verification_status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_signature_verification_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_sign_ver_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *signature_ver_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_signature_verification_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 signature_ver_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verify_signature}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 signature_ver_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 op_verify_sign_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
 *status)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v open_svc_sign_ver_args_t}
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_svc_sign_ver_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure to represent verify sign open service arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\cell }{sig_ver_hdl\cell }{\cell }{\row }
}
{\xe \v op_verify_sign_args_t}
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_verify_sign_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure to represent verify signature operation arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t *{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\cell }{key\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the public key to be used for the verification. If the HSM_OP_VERIFY_SIGN_FLAGS_KEY_INTERNAL is set, it must point to the key reference returned by the hsm_import_public_key API. \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\cell }{message\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input (message or message digest) }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\cell }{signature\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input signature. The signature S=(r,s) is expected to be in the format r||s||Ry where Ry is an additional byte containing the lsb of y. Ry will be considered as valid only if the HSM_OP_VERIFY_SIGN_FLAGS_COMPRESSED_POINT is set. \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\cell }{key_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the input key }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
\cell }{signature_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the output - it must contain one additional byte where to store the Ry. \par
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\cell }{message_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the input message. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\cell }{verification_status\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
verification status. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 hsm_signature_scheme_id_t}}}
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\cell }{scheme_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the digital signature scheme to be used for the operation \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\cell }{salt_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
salt length in bytes }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_bit_key_sz_t}}}
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\cell }{key_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates key security size in bits. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADG" }{}}{\fldrslt {\cs37\ul\cf2 hsm_pubkey_type_t}}}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
\cell }{pkey_type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the public key type }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation attributes }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST\:Signature verification}
{\xe \v Signature verification\:HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(0u << 0))}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Verify signature bit indicating input is message digest \par
}}
{\xe \v HSM_OP_VERIFY_SIGN_FLAGS_INPUT_MESSAGE\:Signature verification}
{\xe \v Signature verification\:HSM_OP_VERIFY_SIGN_FLAGS_INPUT_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_VERIFY_SIGN_FLAGS_INPUT_MESSAGE\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Verify signature bit indicating input is actual message \par
}}
{\xe \v HSM_OP_VERIFY_SIGN_FLAGS_COMPRESSED_POINT\:Signature verification}
{\xe \v Signature verification\:HSM_OP_VERIFY_SIGN_FLAGS_COMPRESSED_POINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_VERIFY_SIGN_FLAGS_COMPRESSED_POINT\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(1u << 1))}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Verify signature bit indicating input based on signature format \par
}}
{\xe \v HSM_OP_VERIFY_SIGN_FLAGS_KEY_INTERNAL\:Signature verification}
{\xe \v Signature verification\:HSM_OP_VERIFY_SIGN_FLAGS_KEY_INTERNAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_VERIFY_SIGN_FLAGS_KEY_INTERNAL\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
)(1u << 2))}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Verify signature bit indicating input is key argument \par
}}
{\xe \v HSM_VERIFICATION_STATUS_SUCCESS\:Signature verification}
{\xe \v Signature verification\:HSM_VERIFICATION_STATUS_SUCCESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_VERIFICATION_STATUS_SUCCESS\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
)(0x5A3CC3A5u))}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Verify signature response success status \par
}}
{\xe \v HSM_VERIFICATION_STATUS_FAILURE\:Signature verification}
{\xe \v Signature verification\:HSM_VERIFICATION_STATUS_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_VERIFICATION_STATUS_FAILURE\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
)(0x2B4DD4B2u))}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Verify signature response failure status \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_verification_status_t\:Signature verification}
{\xe \v Signature verification\:hsm_verification_status_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the response verification status \par
}}
{\xe \v hsm_op_verify_sign_flags_t\:Signature verification}
{\xe \v Signature verification\:hsm_op_verify_sign_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_verify_sign_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the requested operations \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_verify_sign\:Signature verification}
{\xe \v Signature verification\:hsm_verify_sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_verify_sign ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 op_verify_sign_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
 *  {\i verification_status})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to verify a message signature.\par
This API does the following:{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
1.\tab Open a flow for verification of the signature.\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
2.\tab Based on the flag to identify the type of message: Digest or actual message,\par
 verification of the signature is done using the public key.\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
3.\tab Post performing the operation, terminate the previously opened\par
 signature-verification service flow.\par
 User can call this function only after having opened a session.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the current key-store. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i verification_status} \cell }{pointer for storing the verification status.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
{\xe \v hsm_open_signature_verification_service\:Signature verification}
{\xe \v Signature verification\:hsm_open_signature_verification_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_signature_verification_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_sign_ver_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i signature_ver_hdl})}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
User must open this service in order to perform signature verification operations. User can call this function only after having opened a session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the current session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i signature_ver_hdl} \cell }{pointer to where the signature verification service flow handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_close_signature_verification_service\:Signature verification}
{\xe \v Signature verification\:hsm_close_signature_verification_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_signature_verification_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i signature_ver_hdl})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Terminate a previously opened signature verification service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i signature_ver_hdl} \cell }{handle identifying the signature verification service flow to be closed.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_verify_signature\:Signature verification}
{\xe \v Signature verification\:hsm_verify_signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_verify_signature ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i signature_ver_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 op_verify_sign_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_verification_status_t}}}
 *  {\i status})}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Verify a digital signature according to the signature scheme User can call this function only after having opened a signature verification service flow.\par
The signature S=(r,s) is expected to be in format r||s||Ry where:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Ry is an additional byte containing the lsb of y. Ry will be considered as valid only, if the HSM_OP_VERIFY_SIGN_FLAGS_COMPRESSED_POINT is set.\par}
Only not-compressed keys (x,y) can be used by this command. Compressed keys can be decompressed by using the dedicated API.\par
In case of HSM_SIGNATURE_SCHEME_DSA_SM2_FP_256_SM3, message of {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIR" }{}}{\fldrslt {\cs37\ul\cf2 op_verify_sign_args_t}}} should be (as specified in GB/T 32918):{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
equal to Z||M in case of HSM_OP_VERIFY_SIGN_FLAGS_INPUT_MESSAGE \par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
equal to SM3(Z||M) in case of HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i signature_ver_hdl} \cell }{handle identifying the signature verification service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i status} \cell }{pointer to where the verification status must be stored if the verification succeed the value HSM_VERIFICATION_STATUS_SUCCESS is returned.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Random number generation\par \pard\plain
{\tc\tcl2 \v Random number generation}
{\xe \v Random number generation}
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 op_get_random_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_do_rng}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 op_get_random_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_get_random}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 rng_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 op_get_random_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_get_random_args_t}
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_get_random_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the get random number operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t *{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
\cell }{output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area where the random number must be written }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\cell }{random_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the random number to be provided. }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_do_rng\:Random number generation}
{\xe \v Random number generation\:hsm_do_rng}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_do_rng ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 op_get_random_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to fetch the Random Number\par
 This API does the following: Get a freshly generated random number\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the current session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_get_random\:Random number generation}
{\xe \v Random number generation\:hsm_get_random}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_get_random ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i rng_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 op_get_random_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Get a freshly generated random number\par
User can call this function only after having opened a rng service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rng_hdl} \cell }{handle identifying the rng service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Hashing\par \pard\plain
{\tc\tcl2 \v Hashing}
{\xe \v Hashing}
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 op_hash_one_go_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJZ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_HASH_FLAG_ALLOWED}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumerations\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hash_algo_t}}}
 \{ {\b HSM_HASH_ALGO_SHA_224} = 0x02000008,
{\b HSM_HASH_ALGO_SHA_256} = 0x02000009,
{\b HSM_HASH_ALGO_SHA_384} = 0x0200000A,
{\b HSM_HASH_ALGO_SHA_512} = 0x0200000B
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hash_svc_flags_t}}}
 \{ {\b HSM_HASH_FLAG_ONE_SHOT} = 0x1,
{\b HSM_HASH_FLAG_INIT} = 0x2,
{\b HSM_HASH_FLAG_UPDATE} = 0x4,
{\b HSM_HASH_FLAG_FINAL} = 0x8,
{\b HSM_HASH_FLAG_GET_CONTEXT} = 0x80
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_do_hash}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 op_hash_one_go_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hash_one_go}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 hash_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 op_hash_one_go_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_hash_one_go_args_t}
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_hash_one_go_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the hash one go operation arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t *{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\cell }{msb\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the MSB of address in the requester space where buffers can be found, must be 0 until supported. \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\cell }{ctx\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the context. }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\cell }{input\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input data to be hashed }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\cell }{output\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area where the resulting digest must be written }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
\cell }{input_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the input }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\cell }{output_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the output }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hash_algo_t}}}
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\cell }{algo\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
hash algorithm to be used for the operation }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hash_svc_flags_t}}}
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\cell }{svc_flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
flags identifying the operation init() update(), final() or one shot operation. \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\cell }{ctx_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size of context buffer in bytes, ignored in case of one shot operation. \par
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\cell }{exp_output_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected output digest buffer size, returned by FW in case the provided output size is incorrect. \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\cell }{context_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected context size to allocate in bytes, if flag Get context size is set or provided context size is incorrect. \par
}\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_HASH_FLAG_ALLOWED\:Hashing}
{\xe \v Hashing\:HSM_HASH_FLAG_ALLOWED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_HASH_FLAG_ALLOWED}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                   (HSM_HASH_FLAG_ONE_SHOT | HSM_HASH_FLAG_INIT \\\par
                  | HSM_HASH_FLAG_UPDATE | HSM_HASH_FLAG_FINAL \\\par
                  | HSM_HASH_FLAG_GET_CONTEXT)\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap indicating the allowed hash service operations \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumeration Type Documentation\par
\pard\plain
{\xe \v hsm_hash_algo_t\:Hashing}
{\xe \v Hashing\:hsm_hash_algo_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKA" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hash_algo_t}}}
}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap indicating the supported hash algorithm \par
}}
{\xe \v hsm_hash_svc_flags_t\:Hashing}
{\xe \v Hashing\:hsm_hash_svc_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hash_svc_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit field indicating the hash service operations \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_do_hash\:Hashing}
{\xe \v Hashing\:hsm_do_hash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_do_hash ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 op_hash_one_go_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to digest a message.\par
 This API does the following: Perform hash\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the current session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_hash_one_go\:Hashing}
{\xe \v Hashing\:hsm_hash_one_go}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_hash_one_go ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i hash_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJY" }{}}{\fldrslt {\cs37\ul\cf2 op_hash_one_go_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Perform the hash operation on a given input\par
User can call this function only after having opened a hash service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hash_hdl} \cell }{handle identifying the hash service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Data storage\par \pard\plain
{\tc\tcl2 \v Data storage}
{\xe \v Data storage}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_data_storage_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 op_data_storage_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 op_enc_data_storage_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b HSM_OP_DATA_STORAGE_FLAGS_EL2GO}\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_data_storage_flags_t}}}
)(1u << 0)){\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKV" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_DATA_STORAGE_FLAGS_DEFAULT}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_data_storage_flags_t}}}
)(0u << 0)){\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Store data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_DATA_STORAGE_FLAGS_STORE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_data_storage_flags_t}}}
)(1u << 1)){\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Retrieve data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b HSM_OP_DATA_STORAGE_FLAGS_RETRIEVE}\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_data_storage_flags_t}}}
)(0u << 1)){\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKY" }{}}{\fldrslt {\cs37\ul\cf2 ENC_DATA_TLV_DEV_UUID_TAG}}}
\~ 0x41u\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b ENC_DATA_TLV_IV_TAG}\~ 0x45u{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b ENC_DATA_TLV_ENC_DATA_TAG}\~ 0x46u{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b ENC_DATA_TLV_SIGN_TAG}\~ 0x5Eu{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALC" }{}}{\fldrslt {\cs37\ul\cf2 ENC_DATA_TLV_DEV_UUID_TAG_LEN}}}
\~ 0x01u\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b ENC_DATA_TLV_IV_TAG_LEN}\~ 0x01u{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b ENC_DATA_TLV_ENC_DATA_TAG_LEN}\~ 0x01u{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b ENC_DATA_TLV_SIGN_TAG_LEN}\~ 0x01u{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALG" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_ENC_DATA_STORAGE_FLAGS_RANDOM_IV}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_enc_data_storage_flags_t}}}
)(1u << 0)){\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
internally generate random IV, if needed for operation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALI" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_ENC_DATA_STORAGE_FLAGS_READ_ONCE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_enc_data_storage_flags_t}}}
)(1u << 1)){\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
read once, and delete data from NVM after retrieve. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_data_storage_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_data_storage_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_enc_data_storage_flags_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_data_ops}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 op_data_storage_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALL" }{}}{\fldrslt {\cs37\ul\cf2 hsm_enc_data_ops}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 op_enc_data_storage_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALM" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_data_storage_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_data_storage_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *data_storage_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALN" }{}}{\fldrslt {\cs37\ul\cf2 hsm_data_storage}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 data_storage_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 op_data_storage_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALO" }{}}{\fldrslt {\cs37\ul\cf2 hsm_enc_data_storage}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 data_storage_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 op_enc_data_storage_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 decode_enc_data_tlv}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 op_data_storage_args_t}}}
 *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALQ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_data_storage_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 data_storage_hdl)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v open_svc_data_storage_args_t}
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_svc_data_storage_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure specifying the data storage open service member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\cell }{data_storage_handle\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
data storage handle. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_data_storage_flags_t}}}
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the services properties. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\cell }{reserved[3]\cell }{\cell }{\row }
}
{\xe \v op_data_storage_args_t}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_data_storage_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the data storage operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t *{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\cell }{data\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the data. In case of store request, it will be the input data to store. In case of retrieve, it will be the pointer where to load data. \par
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\cell }{data_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the data }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\cell }{data_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
id of the data }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_data_storage_flags_t}}}
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
flags bitmap specifying the operation attributes. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_data_storage_flags_t}}}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\cell }{svc_flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the services properties. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
\cell }{uuid_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Device UUID length in bytes. }{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
In case RETRIEVE, if the data retrieved is in TLV format which was stored by Encrypted Data Storage API. The TLV format data will be decoded to fill the following fields. Memory for storing uuid/iv/ciphertext/payload/signature will be allocated by HSM library. Caller of the function {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALP" }{}}{\fldrslt {\cs37\ul\cf2 decode_enc_data_tlv()}}}, needs to ensure freeing up memory. \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\cell }{uuid\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Device UUID. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\cell }{iv_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
IV length in bytes, if needed, otherwise 0. }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\cell }{iv\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
IV buffer, if needed. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\cell }{ciphertext_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
encrypted text length in bytes }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\cell }{ciphertext\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
encrypted text buffer }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\cell }{payload_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
payload length in bytes }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\cell }{payload\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
payload data buffer to verify signature }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\cell }{signature_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
signature length in bytes }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\cell }{signature\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
signature buffer }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\cell }{exp_output_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected output buffer size in bytes, valid in case of HSM_OUT_TOO_SMALL (0x1D) error code \par
}\cell }{\row }
}
{\xe \v op_enc_data_storage_args_t}
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_enc_data_storage_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\cell }{data_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
id of the data }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\cell }{data\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the data, to be encrypted and signed }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\cell }{data_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the data }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\cell }{enc_algo\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
cipher algorithm to be used for encryption of data }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\cell }{enc_key_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for encryption }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\cell }{sign_algo\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
signature algorithm to be used for signing the data }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\cell }{sign_key_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for signing }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\cell }{iv\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the IV buffer }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\cell }{iv_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
IV size in bytes. }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_enc_data_storage_flags_t}}}
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation attributes }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_data_storage_flags_t}}}
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{svc_flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the service attributes. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\cell }{lifecycle\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmask of device lifecycle, in which the data can be retrieved }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\cell }{out_data_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size (bytes) of the signed TLV stored, received with API resp }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v ENC_DATA_TLV_DEV_UUID_TAG\:Data storage}
{\xe \v Data storage\:ENC_DATA_TLV_DEV_UUID_TAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define ENC_DATA_TLV_DEV_UUID_TAG\~ 0x41u}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Encrypted Data TLV Tags \par
}}
{\xe \v ENC_DATA_TLV_DEV_UUID_TAG_LEN\:Data storage}
{\xe \v Data storage\:ENC_DATA_TLV_DEV_UUID_TAG_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define ENC_DATA_TLV_DEV_UUID_TAG_LEN\~ 0x01u}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Encrypted Data TLV Tags lengths \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_svc_data_storage_flags_t\:Data storage}
{\xe \v Data storage\:hsm_svc_data_storage_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_data_storage_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the data storage open service supported properties \par
}}
{\xe \v hsm_op_data_storage_flags_t\:Data storage}
{\xe \v Data storage\:hsm_op_data_storage_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKT" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_data_storage_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the data storage operation supported attributes \par
}}
{\xe \v hsm_op_enc_data_storage_flags_t\:Data storage}
{\xe \v Data storage\:hsm_op_enc_data_storage_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint16_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAALH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_enc_data_storage_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the encrypted data storage operation supported attributes \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_data_ops\:Data storage}
{\xe \v Data storage\:hsm_data_ops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_data_ops ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 op_data_storage_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to store and retrieve data from the linux filesystem managed by EdgeLock Enclave Firmware.\par
This API does the following:{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
1.\tab Open an data storage service Flow\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
2.\tab Based on the flag for operation attribute: Store or Retrieve,\par
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Store the data\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Retrieve the data, from the non-volatile storage.\par}
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
3.\tab Post performing the operation, terminate the previously opened data-storage service flow.\par
 User can call this function only after having opened a key-store.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the current key-store. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
{\xe \v hsm_enc_data_ops\:Data storage}
{\xe \v Data storage\:hsm_enc_data_ops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_enc_data_ops ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 op_enc_data_storage_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to store encrypted and signed data in NVM.\par
This API does the following:{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
1.\tab Open an data storage service Flow\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
2.\tab Store the encryted and signed data in NVM. The stored data can be retrieved through Data Storage API\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
3.\tab Post performing the operation, terminate the previously opened\par
 data-storage service flow.\par
 User can call this function only after having opened a key-store.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the current key-store. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
{\xe \v hsm_open_data_storage_service\:Data storage}
{\xe \v Data storage\:hsm_open_data_storage_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_data_storage_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKQ" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_data_storage_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i data_storage_hdl})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Open a data storage service flow\par
User must open this service flow in order to store/retrieve generic data in/from the HSM.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data_storage_hdl} \cell }{pointer to where the data storage service flow handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error_code error code. \par
}}}}
{\xe \v hsm_data_storage\:Data storage}
{\xe \v Data storage\:hsm_data_storage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_data_storage ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i data_storage_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 op_data_storage_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Store or retrieve generic data identified by a data_id. \par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data_storage_hdl} \cell }{handle identifying the data storage service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_enc_data_storage\:Data storage}
{\xe \v Data storage\:hsm_enc_data_storage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_enc_data_storage ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i data_storage_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKS" }{}}{\fldrslt {\cs37\ul\cf2 op_enc_data_storage_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Store encrypted and signed data in the NVM. \par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data_storage_hdl} \cell }{handle identifying the data storage service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v decode_enc_data_tlv\:Data storage}
{\xe \v Data storage\:decode_enc_data_tlv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
uint8_t decode_enc_data_tlv ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKR" }{}}{\fldrslt {\cs37\ul\cf2 op_data_storage_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Decode and populate the data storage op args for Encrypted Data TLV fields\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing Retrieved Encrypted Data TLV buffer and to be populated with decoded data from TLV.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code 0 for success \par
}}}}
{\xe \v hsm_close_data_storage_service\:Data storage}
{\xe \v Data storage\:hsm_close_data_storage_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_data_storage_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i data_storage_hdl})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Terminate a previously opened data storage service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data_storage_hdl} \cell }{handle identifying the data storage service flow.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Authenticated Encryption\par \pard\plain
{\tc\tcl2 \v Authenticated Encryption}
{\xe \v Authenticated Encryption}
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_do_auth_enc}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 op_auth_enc_args_t}}}
 *auth_enc_args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_do_auth_enc\:Authenticated Encryption}
{\xe \v Authenticated Encryption\:hsm_do_auth_enc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_do_auth_enc ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 op_auth_enc_args_t}}}
 *  {\i auth_enc_args})}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to perform Authenticated Encryption\par
 This API does the following:{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
1.\tab Opens Cipher Service Flow\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
2.\tab Perform Authenticated Encryption operation\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
3.\tab Terminates the previously opened Cipher service flow\par
 User can call this function only after having opened a key store service flow.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i auth_enc_args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Mac\par \pard\plain
{\tc\tcl2 \v Mac}
{\xe \v Mac}
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_mac_args_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 op_mac_one_go_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MAC_ONE_GO_FLAGS_MAC_VERIFICATION}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_flags_t}}}
)(0u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_MAC_ONE_GO_FLAGS_MAC_GENERATION}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_flags_t}}}
)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 HSM_MAC_VERIFICATION_STATUS_SUCCESS}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_verification_status_t}}}
)(0x6C1AA1C6u))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_verification_status_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_permitted_algo_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_algo_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_do_mac}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 op_mac_one_go_args_t}}}
 *mac_one_go)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_mac_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_mac_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *mac_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_one_go}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 mac_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 op_mac_one_go_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_verification_status_t}}}
 *status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_mac_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 mac_hdl)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v open_svc_mac_args_t}
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_svc_mac_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the mac open service member agruments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\cell }{mac_serv_hdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the mac handle. }\cell }{\row }
}
{\xe \v op_mac_one_go_args_t}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_mac_one_go_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the mac one go operation member agruments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
identifier of the key to be used for the operation }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_algo_t}}}
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\cell }{algorithm\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
algorithm to be used for the operation }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_flags_t}}}
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the operation attributes }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\cell }{payload\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the payload area\par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\cell }{mac\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the tag area\par
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\cell }{payload_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the payload }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\cell }{mac_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length of the tag.{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Specified in bytes if HSM_OP_MAC_ONE_GO_FLAGS_MAC_LENGTH_IN_BITS is clear.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Specified in bits when HSM_OP_MAC_ONE_GO_FLAGS_MAC_LENGTH_IN_BITS is set. Note:{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
When specified in bytes the mac size cannot be less than 4 bytes.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
When specified in bits the mac size cannot be less than: \'96 the key specific min_mac_len setting if specified for this key when generated/injected; or \'96 the min_mac_length value if specified at the key store provisioning. (if a key specific setting was not specified at key generation/injection); or \'96 the default value (32 bit) if a minimum has not been specified using one of the above 2 methods. \par}
}
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_verification_status_t}}}
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\cell }{verification_status\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
mac verification status. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\cell }{exp_mac_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected mac size for output, returned by FW in case the mac size provided is less than the expected mac size calculated from MAC algorithm. \par
}\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_OP_MAC_ONE_GO_FLAGS_MAC_VERIFICATION\:Mac}
{\xe \v Mac\:HSM_OP_MAC_ONE_GO_FLAGS_MAC_VERIFICATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_MAC_ONE_GO_FLAGS_MAC_VERIFICATION\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_flags_t}}}
)(0u << 0))}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating mac one go verify operation \par
}}
{\xe \v HSM_OP_MAC_ONE_GO_FLAGS_MAC_GENERATION\:Mac}
{\xe \v Mac\:HSM_OP_MAC_ONE_GO_FLAGS_MAC_GENERATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_MAC_ONE_GO_FLAGS_MAC_GENERATION\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_flags_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating mac one go generate operation \par
}}
{\xe \v HSM_MAC_VERIFICATION_STATUS_SUCCESS\:Mac}
{\xe \v Mac\:HSM_MAC_VERIFICATION_STATUS_SUCCESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_MAC_VERIFICATION_STATUS_SUCCESS\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_verification_status_t}}}
)(0x6C1AA1C6u))}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating mac verification success status \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_op_mac_one_go_flags_t\:Mac}
{\xe \v Mac\:hsm_op_mac_one_go_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap describing the mac one go operation \par
}}
{\xe \v hsm_mac_verification_status_t\:Mac}
{\xe \v Mac\:hsm_mac_verification_status_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_verification_status_t}}}
}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap describing the mac verification status \par
}}
{\xe \v hsm_op_mac_one_go_algo_t\:Mac}
{\xe \v Mac\:hsm_op_mac_one_go_algo_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_permitted_algo_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADJ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_mac_one_go_algo_t}}}
}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap describing the mac one go operation permitted algorithm < Following three permitted algos are allowed:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
PERMITTED_ALGO_HMAC_SHA256 = 0x03800009,\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
PERMITTED_ALGO_HMAC_SHA384 = 0x0380000A,{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
PERMITTED_ALGO_CMAC = 0x03C00200, \par}
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_do_mac\:Mac}
{\xe \v Mac\:hsm_do_mac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_do_mac ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 op_mac_one_go_args_t}}}
 *  {\i mac_one_go})}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secondary API to perform mac operation\par
 This API does the following:{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
1.\tab Open an MAC Service Flow\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
2.\tab Perform mac operation\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid
3.\tab Terminate a previously opened mac service flow\par
 User can call this function only after having opened a key store service flow.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mac_one_go} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
{\xe \v hsm_open_mac_service\:Mac}
{\xe \v Mac\:hsm_open_mac_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_mac_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_mac_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i mac_hdl})}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Open a mac service flow\par
User can call this function only after having opened a key store service flow.\par
 User must open this service in order to perform mac operation\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mac_hdl} \cell }{pointer to where the mac service flow handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
{\xe \v hsm_mac_one_go\:Mac}
{\xe \v Mac\:hsm_mac_one_go}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_mac_one_go ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i mac_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAER" }{}}{\fldrslt {\cs37\ul\cf2 op_mac_one_go_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_mac_verification_status_t}}}
 *  {\i status})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Perform mac operation\par
User can call this function only after having opened a mac service flow\par
 For CMAC algorithm, a key of type HSM_KEY_TYPE_AES_XXX must be used\par
 For HMAC algorithm, a key of type HSM_KEY_TYPE_HMAC_XXX must be used\par
 For mac verification operations, the verified mac length can be specified in:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
Bits by setting the HSM_OP_MAC_ONE_GO_FLAGS_MAC_LENGTH_IN_BITS flag,\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
if this flag is clear then the mac_length is specified in bytes.\par}
For mac generation operations:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
mac length must be set in bytes, and\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
HSM_OP_MAC_ONE_GO_FLAGS_MAC_LENGTH_IN_BITS flag must be 0\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mac_hdl} \cell }{handle identifying the mac service flow. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i status} \cell }{pointer for storing the verification status.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}
}}
{\xe \v hsm_close_mac_service\:Mac}
{\xe \v Mac\:hsm_close_mac_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_mac_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i mac_hdl})}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Terminate a previously opened mac service flow\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mac_hdl} \cell }{pointer to handle identifying the mac service flow to be closed.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Dump Firmware Log\par \pard\plain
{\tc\tcl2 \v Dump Firmware Log}
{\xe \v Dump Firmware Log}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 op_debug_dump_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANX" }{}}{\fldrslt {\cs37\ul\cf2 dump_firmware_log}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_debug_dump_args_t}
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_debug_dump_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the debug dump operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\cell }{is_dump_pending\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\cell }{dump_buf_len\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\cell }{dump_buf[MAC_BUFF_LEN]\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v dump_firmware_log\:Dump Firmware Log}
{\xe \v Dump Firmware Log\:dump_firmware_log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 dump_firmware_log ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This command is designed to dump the firmware logs\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the session handle.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Dev attest\par \pard\plain
{\tc\tcl2 \v Dev attest}
{\xe \v Dev attest}
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 op_dev_attest_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOD" }{}}{\fldrslt {\cs37\ul\cf2 DEV_ATTEST_NOUNCE_SIZE_V1}}}
\~ (4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\b DEV_ATTEST_NOUNCE_SIZE_V2}\~ (16){\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_dev_attest}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 sess_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 op_dev_attest_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_dev_attest_args_t}
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_dev_attest_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the device attestation operation member arguments Memory for storing uid/sha_rom_patch/sha_fw/signature will be allocated by HSM library. Caller of the func {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_dev_attest()}}}, needs to ensure freeing up memory. \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\cell }{soc_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
SoC ID. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\cell }{soc_rev\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
SoC Revision. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\cell }{lmda_val\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Lmda Lifecycle value. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\cell }{ssm_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Security Subsystem State Machine state. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\cell }{uid_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
buffer size in bytes for Chip Unique Identifier }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
\cell }{uid\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the Chip Unique Identifier buffer }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\cell }{rom_patch_sha_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
buffer size in bytes for SHA256 of Sentinel ROM patch fuses }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\cell }{sha_fw_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
buffer size in bytes for first 256 bits of installed FW SHA }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\cell }{sha_rom_patch\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the buffer containing SHA256 of Sentinel ROM patch fuses }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\cell }{sha_fw\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the buffer containing first 256 bits of installed FW SHA }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\cell }{nounce_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
buffer size in bytes for request nounce value }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\cell }{nounce\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input/request nounce value buffer }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\cell }{rsp_nounce_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes for FW nounce buffer, returned with FW resp }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\cell }{rsp_nounce\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the FW nounce buffer, returned with FW resp }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\cell }{oem_srkh_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
buffer size in bytes for OEM SRKH (version 2) }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\cell }{oem_srkh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the buffer of OEM SRKH (version 2) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\cell }{imem_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
IMEM state (version 2) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\cell }{csal_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
CSAL state (version 2) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\cell }{trng_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
TRNG state (version 2) }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\cell }{info_buf_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes for info buffer }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\cell }{info_buf\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the info buffer, for verification of the signature }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\cell }{attest_result\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Attest Result. 0 means pass. 1 means fail. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\cell }{sign_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
buffer size in bytes for signature }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\cell }{signature\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the signature buffer }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v DEV_ATTEST_NOUNCE_SIZE_V1\:Dev attest}
{\xe \v Dev attest\:DEV_ATTEST_NOUNCE_SIZE_V1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define DEV_ATTEST_NOUNCE_SIZE_V1\~ (4)}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Device Attestation Nounce sizes \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_dev_attest\:Dev attest}
{\xe \v Dev attest\:hsm_dev_attest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_dev_attest ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i sess_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOC" }{}}{\fldrslt {\cs37\ul\cf2 op_dev_attest_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Perform device attestation operation\par
User can call this function only after having opened the session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sess_hdl} \cell }{handle identifying the active session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Dev Info\par \pard\plain
{\tc\tcl2 \v Dev Info}
{\xe \v Dev Info}
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 op_dev_getinfo_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 hsm_dev_getinfo}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 sess_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 op_dev_getinfo_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_dev_getinfo_args_t}
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_dev_getinfo_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the device getinfo operation member arguments Memory for storing uid/sha_rom_patch/sha_fw/signature will be allocated by HSM library. Caller of the func {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPG" }{}}{\fldrslt {\cs37\ul\cf2 hsm_dev_getinfo()}}}, needs to ensure freeing up memory. \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{soc_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
SoC ID. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{soc_rev\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
SoC revision number. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{lmda_val\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the lmda lifecycle value. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\cell }{ssm_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
security subsystem state machine. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\cell }{uid_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
chip unique identifier size. }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\cell }{uid\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the chip unique identifier. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\cell }{rom_patch_sha_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the size of Sha256 of sentinel rom patch fuses. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\cell }{sha_fw_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the size of first 256 bits of installed fw sha. }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\cell }{sha_rom_patch\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the Sha256 of sentinel rom patch fuses digest. }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{sha_fw\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the first 256 bits of installed fw sha digest. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{oem_srkh_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the size of FW OEM SRKH. }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{oem_srkh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the FW OEM SRKH. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\cell }{imem_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the imem state. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{csal_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
crypto Lib random context initialization state. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{trng_state\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates TRNG state. }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_dev_getinfo\:Dev Info}
{\xe \v Dev Info\:hsm_dev_getinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_dev_getinfo ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i sess_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPF" }{}}{\fldrslt {\cs37\ul\cf2 op_dev_getinfo_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Perform device attestation operation\par
User can call this function only after having opened the session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sess_hdl} \cell }{handle identifying the active session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Generic Crypto: Asymmetric Crypto\par \pard\plain
{\tc\tcl2 \v Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto}
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPX" }{}}{\fldrslt {\cs37\ul\cf2 op_gc_acrypto_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPY" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OP_GC_ACRYPTO_FLAGS_INPUT_MESSAGE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_flags_t}}}
)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQA" }{}}{\fldrslt {\cs37\ul\cf2 HSM_GC_ACRYPTO_VERIFICATION_SUCCESS}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_verification_status_t}}}
)(0x5A3CC3A5u))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQC" }{}}{\fldrslt {\cs37\ul\cf2 HSM_GC_ACRYPTO_VERIFICATION_FAILURE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_verification_status_t}}}
)(0x2B4DD4B2u))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_flags_t}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_verification_status_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumerations\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_algo_t}}}
 \{ {\b HSM_GC_ACRYPTO_ALGO_ECDSA_SHA224} = ALGO_ECDSA_SHA224,
{\b HSM_GC_ACRYPTO_ALGO_ECDSA_SHA256} = ALGO_ECDSA_SHA256,
{\b HSM_GC_ACRYPTO_ALGO_ECDSA_SHA384} = ALGO_ECDSA_SHA384,
{\b HSM_GC_ACRYPTO_ALGO_ECDSA_SHA512} = ALGO_ECDSA_SHA512,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_V15_SHA224} = ALGO_RSA_PKCS1_V15_SHA224,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_V15_SHA256} = ALGO_RSA_PKCS1_V15_SHA256,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_V15_SHA384} = ALGO_RSA_PKCS1_V15_SHA384,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_V15_SHA512} = ALGO_RSA_PKCS1_V15_SHA512,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_PSS_MGF1_SHA224} = ALGO_RSA_PKCS1_PSS_MGF1_SHA224,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_PSS_MGF1_SHA256} = ALGO_RSA_PKCS1_PSS_MGF1_SHA256,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_PSS_MGF1_SHA384} = ALGO_RSA_PKCS1_PSS_MGF1_SHA384,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_PSS_MGF1_SHA512} = ALGO_RSA_PKCS1_PSS_MGF1_SHA512,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_V15_CRYPT} = ALGO_RSA_PKCS1_V15_CRYPT,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_OAEP_SHA1} = ALGO_RSA_PKCS1_OAEP_SHA1,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_OAEP_SHA224} = ALGO_RSA_PKCS1_OAEP_SHA224,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_OAEP_SHA256} = ALGO_RSA_PKCS1_OAEP_SHA256,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_OAEP_SHA384} = ALGO_RSA_PKCS1_OAEP_SHA384,
{\b HSM_GC_ACRYPTO_ALGO_RSA_PKCS1_OAEP_SHA512} = ALGO_RSA_PKCS1_OAEP_SHA512
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQE" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_op_mode_t}}}
 \{ {\b HSM_GC_ACRYPTO_OP_MODE_ENCRYPT} = 0x01,
{\b HSM_GC_ACRYPTO_OP_MODE_DECRYPT} = 0x02,
{\b HSM_GC_ACRYPTO_OP_MODE_SIGN_GEN} = 0x03,
{\b HSM_GC_ACRYPTO_OP_MODE_SIGN_VER} = 0x04
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQF" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPX" }{}}{\fldrslt {\cs37\ul\cf2 op_gc_acrypto_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_gc_acrypto_args_t}
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_gc_acrypto_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the generic asymmetric crypto member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_algo_t}}}
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\cell }{algorithm\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
algorithm to use for the operation }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQE" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_op_mode_t}}}
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\cell }{op_mode\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates the operation mode }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_flags_t}}}
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates operation flags }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_bit_key_sz_t}}}
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\cell }{bit_key_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
key size in bits }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{data_buff1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the data buffer 1:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
plaintext in case of encryption/decryption op\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
digest or message in case of signature generation/verification op \par}
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{data_buff2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the data buffer 2:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
ciphertext in case of encryption/decryption op\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
signature in case of signature generation/verification op \par}
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{data_buff1_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes of data buffer 1 }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{data_buff2_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes of data buffer 2 }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{key_buff1\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the key modulus buffer }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{key_buff2\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer the key exponent, either private or public -Encryption mode, public exponent -Decryption mode, private exponent -Signature Generation mode, private exponent -Signature Verification mode, public exponent \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{key_buff1_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes of the key buffer 1 }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{key_buff2_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes of the key buffer 2 }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{rsa_label\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
RSA label address -only used for OAEP encryption/decryption op mode and optional \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{rsa_label_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
RSA label size in bytes -only used for OAEP encryption/decryption op mode \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{rsa_salt_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
RSA salt length in bytes -only used for PSS signature algorithm scheme \par
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{exp_plaintext_len\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected plaintext length in bytes, returned by FW in case of DECRYPT operation mode \par
}\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_verification_status_t}}}
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{verification_status\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
signature verification status }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_OP_GC_ACRYPTO_FLAGS_INPUT_MESSAGE\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:HSM_OP_GC_ACRYPTO_FLAGS_INPUT_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_OP_GC_ACRYPTO_FLAGS_INPUT_MESSAGE\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_flags_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the generic asymmetric crypto input message operation \par
}}
{\xe \v HSM_GC_ACRYPTO_VERIFICATION_SUCCESS\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:HSM_GC_ACRYPTO_VERIFICATION_SUCCESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_GC_ACRYPTO_VERIFICATION_SUCCESS\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_verification_status_t}}}
)(0x5A3CC3A5u))}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the generic asymmetric crypto success verification status \par
}}
{\xe \v HSM_GC_ACRYPTO_VERIFICATION_FAILURE\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:HSM_GC_ACRYPTO_VERIFICATION_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_GC_ACRYPTO_VERIFICATION_FAILURE\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_verification_status_t}}}
)(0x2B4DD4B2u))}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bit indicating the generic asymmetric crypto failure verification status \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_op_gc_acrypto_flags_t\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:hsm_op_gc_acrypto_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap describing the generic asymmetric crypto supported operation \par
}}
{\xe \v hsm_gc_acrypto_verification_status_t\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:hsm_gc_acrypto_verification_status_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint32_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQB" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_verification_status_t}}}
}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap describing the generic asymmetric crypto verification status \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumeration Type Documentation\par
\pard\plain
{\xe \v hsm_op_gc_acrypto_algo_t\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:hsm_op_gc_acrypto_algo_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_op_gc_acrypto_algo_t}}}
}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum detailing the generic asymmetric crypto supported algorithms \par
}}
{\xe \v hsm_gc_acrypto_op_mode_t\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:hsm_gc_acrypto_op_mode_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQE" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_acrypto_op_mode_t}}}
}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum describing the generic asymmetric crypto supported operating modes \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_gc_acrypto\:Generic Crypto: Asymmetric Crypto}
{\xe \v Generic Crypto: Asymmetric Crypto\:hsm_gc_acrypto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_gc_acrypto ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPX" }{}}{\fldrslt {\cs37\ul\cf2 op_gc_acrypto_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This command is designed to perform the following operations: -Asymmetric crypto -encryption/decryption -signature generation/verification\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the current session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Generic Crypto Asymmetric Key Generate\par \pard\plain
{\tc\tcl2 \v Generic Crypto Asymmetric Key Generate}
{\xe \v Generic Crypto Asymmetric Key Generate}
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 op_gc_akey_gen_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 hsm_gc_akey_gen}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 op_gc_akey_gen_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_gc_akey_gen_args_t}
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_gc_akey_gen_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structue detailing the generic crypto asymmetric key generate operation members \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t *{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{modulus\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output buffer of key modulus }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{priv_buff\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output buffer of key private exponent }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\cell }{pub_buff\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the input buffer containing key public exponent }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{modulus_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes of the modulus buffer }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{priv_buff_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes of the private exponent buffer }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{pub_buff_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bytes of the public exponent buffer }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_key_type_t}}}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{key_type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
indicates which type of keypair must be generated }\cell }{\row }
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_bit_key_sz_t}}}
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\cell }{bit_key_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size in bits of the keypair to be generated }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_gc_akey_gen\:Generic Crypto Asymmetric Key Generate}
{\xe \v Generic Crypto Asymmetric Key Generate\:hsm_gc_akey_gen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_gc_akey_gen ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQY" }{}}{\fldrslt {\cs37\ul\cf2 op_gc_akey_gen_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This command is designed to perform the following operations: -Generate asymmetric keys, without using FW keystore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the current session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Get Info\par \pard\plain
{\tc\tcl2 \v Get Info}
{\xe \v Get Info}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 op_get_info_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARK" }{}}{\fldrslt {\cs37\ul\cf2 hsm_get_info}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 sess_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 op_get_info_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_get_info_args_t}
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_get_info_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure describing the get info operation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\cell }{user_sab_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Stores User identifier (32bits) }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\cell }{chip_unique_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Stores the chip unique identifier. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\cell }{chip_unq_id_sz\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Size of the chip unique identifier in bytes. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\cell }{chip_monotonic_counter\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Stores the chip monotonic counter value (16bits) }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\cell }{chip_life_cycle\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Stores the chip current life cycle bitfield (16bits) }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\cell }{version\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Stores the module version (32bits) }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\cell }{version_ext\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Stores the module extended version (32bits) }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\cell }{fips_mode\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Stores the FIPS mode bitfield (8bits). Bitmask definition:\par
bit0 - FIPS mode of operation:\par
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
value 0 - part is running in FIPS non-approved mode.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
value 1 - part is running in FIPS approved mode.\par
bit1 - FIPS certified part:\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
value 0 - part is not FIPS certified.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
value 1 - part is FIPS certified.\par
bit2-7: reserved\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
value 0. \par}
}\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_get_info\:Get Info}
{\xe \v Get Info\:hsm_get_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_get_info ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i sess_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 op_get_info_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Perform device attestation operation\par
User can call this function only after having opened the session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sess_hdl} \cell }{handle identifying the active session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Public key recovery\par \pard\plain
{\tc\tcl2 \v Public key recovery}
{\xe \v Public key recovery}
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Public Key Recovery is now also known as Public Key Exportation, in PSA compliant APIs. The naming here has been kept unchanged, for backward compatibility and Non-PSA compliant APIs.\par
. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARU" }{}}{\fldrslt {\cs37\ul\cf2 op_pub_key_recovery_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_pub_key_recovery}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARU" }{}}{\fldrslt {\cs37\ul\cf2 op_pub_key_recovery_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Public Key Recovery is now also known as Public Key Exportation, in PSA compliant APIs. The naming here has been kept unchanged, for backward compatibility and Non-PSA compliant APIs.\par
. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_pub_key_recovery_args_t}
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_pub_key_recovery_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure detailing the public key recovery opeation member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\cell }{key_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
< pointer to the identifier of the key to be used for the operation }{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to the output area where the generated public key must be written \par
}\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\cell }{out_key\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
length in bytes of the output key }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\cell }{out_key_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
expected output key buffer size, valid in case of HSM_OUT_TOO_SMALL }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\cell }{exp_out_key_size\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_pub_key_recovery\:Public key recovery}
{\xe \v Public key recovery\:hsm_pub_key_recovery}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_pub_key_recovery ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARU" }{}}{\fldrslt {\cs37\ul\cf2 op_pub_key_recovery_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Recover Public key from private key present in key store \par
User can call this function only after having opened a key store.\par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the current key store. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Key store\par \pard\plain
{\tc\tcl2 \v Key store}
{\xe \v Key store}
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
User must open a key store service flow in order to perform the following operations: }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASB" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_key_store_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macros\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid

#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASC" }{}}{\fldrslt {\cs37\ul\cf2 HSM_SVC_KEY_STORE_FLAGS_LOAD}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
)(0u << 0)){\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
It must be specified to load a previously created key store. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASE" }{}}{\fldrslt {\cs37\ul\cf2 HSM_SVC_KEY_STORE_FLAGS_CREATE}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
)(1u << 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASF" }{}}{\fldrslt {\cs37\ul\cf2 HSM_SVC_KEY_STORE_FLAGS_SET_MAC_LEN}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
)(1u << 3))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASG" }{}}{\fldrslt {\cs37\ul\cf2 HSM_SVC_KEY_STORE_FLAGS_STRICT_OPERATION}}}
\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
)(1u << 7))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedefs\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASH" }{}}{\fldrslt {\cs37\ul\cf2 hsm_open_key_store_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASB" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_key_store_args_t}}}
 *args, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *key_store_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASI" }{}}{\fldrslt {\cs37\ul\cf2 hsm_close_key_store_service}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 key_store_hdl)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
User must open a key store service flow in order to perform the following operations: \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
create a new key store\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
perform operations involving keys stored in the key store (ciphering, signature generation...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
perform a key store reprovisioning using a signed message. A key store re-provisioning results in erasing all the key stores handled by the HSM.\par}
\parTo grant access to the key store, the caller is authenticated against the domain ID (DID) and Messaging Unit used at the keystore creation, additionally an authentication nonce can be provided. \par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v open_svc_key_store_args_t}
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct open_svc_key_store_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure specifying the open key store service member arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\cell }{key_store_hdl\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
handle identifying the key store service flow }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\cell }{key_store_identifier\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
user defined id identifying the key store. Only one key store service can be opened on a given key_store_identifier. \par
}\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\cell }{authentication_nonce\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
user defined nonce used as authentication proof for accessing the key store. \par
}\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\cell }{flags\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
bitmap specifying the services properties. }\cell }{\row }
{\qr uint8_t *{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\cell }{signed_message\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
pointer to signed_message to be sent only in case of key store re-provisioning. \par
}\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\cell }{signed_msg_size\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
size of the signed_message to be sent only in case of key store re-provisioning. \par
}\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Macro Definition Documentation\par
\pard\plain
{\xe \v HSM_SVC_KEY_STORE_FLAGS_CREATE\:Key store}
{\xe \v Key store\:HSM_SVC_KEY_STORE_FLAGS_CREATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_SVC_KEY_STORE_FLAGS_CREATE\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
)(1u << 0))}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
It must be specified to create a new key store. The key store will be stored in the NVM only if the STRICT OPERATION flag is set. \par
}}
{\xe \v HSM_SVC_KEY_STORE_FLAGS_SET_MAC_LEN\:Key store}
{\xe \v Key store\:HSM_SVC_KEY_STORE_FLAGS_SET_MAC_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_SVC_KEY_STORE_FLAGS_SET_MAC_LEN\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
)(1u << 3))}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
If set, minimum mac length specified in min_mac_length field will be stored in the key store when creating the key store. Must only be set at key store creation. \par
}}
{\xe \v HSM_SVC_KEY_STORE_FLAGS_STRICT_OPERATION\:Key store}
{\xe \v Key store\:HSM_SVC_KEY_STORE_FLAGS_STRICT_OPERATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
#define HSM_SVC_KEY_STORE_FLAGS_STRICT_OPERATION\~ (({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
)(1u << 7))}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The request is completed only when the new key store has been written in the NVM. This applicable for CREATE operations only. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Typedef Documentation\par
\pard\plain
{\xe \v hsm_svc_key_store_flags_t\:Key store}
{\xe \v Key store\:hsm_svc_key_store_flags_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
typedef uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 hsm_svc_key_store_flags_t}}}
}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Bitmap specifying the open key store service supported attributes \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_open_key_store_service\:Key store}
{\xe \v Key store\:hsm_open_key_store_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_open_key_store_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASB" }{}}{\fldrslt {\cs37\ul\cf2 open_svc_key_store_args_t}}}
 *  {\i args}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 *  {\i key_store_hdl})}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Open a service flow on the specified key store. Only one key store service can be opened on a given key store.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{pointer to the handle identifying the current session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{pointer to where the key store service flow handle must be written.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code. \par
}}}}
{\xe \v hsm_close_key_store_service\:Key store}
{\xe \v Key store\:hsm_close_key_store_service}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_close_key_store_service ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i key_store_hdl})}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Close a previously opened key store service flow. The key store is deleted from the HSM local memory, any update not written in the NVM is lost \par
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key_store_hdl} \cell }{handle identifying the key store service flow to be closed.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code. \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Life Cycle update\par \pard\plain
{\tc\tcl2 \v Life Cycle update}
{\xe \v Life Cycle update}
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASQ" }{}}{\fldrslt {\cs37\ul\cf2 op_lc_update_msg_args_t}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumerations\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_lc_new_state_t}}}
 \{ {\b HSM_NXP_PROVISIONED_STATE} = (1u << 0),
{\b HSM_OEM_OPEN_STATE} = (1u << 1),
{\b HSM_OEM_CLOSE_STATE} = (1u << 3),
{\b HSM_OEM_FIELD_RET_STATE} = (1u << 4),
{\b HSM_NXP_FIELD_RET_STATE} = (1u << 5),
{\b HSM_OEM_LOCKED_STATE} = (1u << 7)
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASS" }{}}{\fldrslt {\cs37\ul\cf2 hsm_lc_update}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 session_hdl, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASQ" }{}}{\fldrslt {\cs37\ul\cf2 op_lc_update_msg_args_t}}}
 *args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v op_lc_update_msg_args_t}
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct op_lc_update_msg_args_t\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Structure specifying the life cycle update message arguments \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_lc_new_state_t}}}
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\cell }{new_lc_state\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumeration Type Documentation\par
\pard\plain
{\xe \v hsm_lc_new_state_t\:Life Cycle update}
{\xe \v Life Cycle update\:hsm_lc_new_state_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASR" }{}}{\fldrslt {\cs37\ul\cf2 hsm_lc_new_state_t}}}
}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Enum specifying the Life Cycle state \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v hsm_lc_update\:Life Cycle update}
{\xe \v Life Cycle update\:hsm_lc_update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 hsm_lc_update ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i session_hdl}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASQ" }{}}{\fldrslt {\cs37\ul\cf2 op_lc_update_msg_args_t}}}
 *  {\i args})}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This API will perform the Life Cycle update\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session_hdl} \cell }{handle identifying the session handle. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{pointer to the structure containing the function arguments.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
error code \par
}}}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Global Information\par \pard\plain
{\tc\tcl2 \v Global Information}
{\xe \v Global Information}
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structures\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASV" }{}}{\fldrslt {\cs37\ul\cf2 global_info_s}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Functions\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASW" }{}}{\fldrslt {\cs37\ul\cf2 populate_global_info}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
 hsm_session_hdl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASX" }{}}{\fldrslt {\cs37\ul\cf2 show_global_info}}}
 (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
uint8_t {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASY" }{}}{\fldrslt {\cs37\ul\cf2 hsm_get_dev_attest_api_ver}}}
 (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASZ" }{}}{\fldrslt {\cs37\ul\cf2 get_soc_id_str}}}
 (uint16_t soc_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATA" }{}}{\fldrslt {\cs37\ul\cf2 get_soc_rev_str}}}
 (uint16_t soc_rev)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
const char * {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATB" }{}}{\fldrslt {\cs37\ul\cf2 get_soc_lf_str}}}
 (uint16_t lifecycle)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Variables\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASV" }{}}{\fldrslt {\cs37\ul\cf2 global_info_s}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATC" }{}}{\fldrslt {\cs37\ul\cf2 global_info}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Data Structure Documentation\par
\pard\plain
{\xe \v global_info_s}
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
struct global_info_s\par
\pard\plain
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Global Information structure contain information about SoC and the Library. It will be used globally to take platform specific decisions. \par
}}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Data Fields:\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\cell }{is_populated\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
to ensure global info is populated once. }\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{ver\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Supported version of HSM APIs. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{soc_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
SoC ID. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{soc_rev\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
SoC Revision. }\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{lifecycle\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Device Lifecycle. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{lib_newness_ver\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secure Enclave Library Newness Version. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{lib_major_ver\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secure Enclave Library Major Version. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{lib_minor_ver\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secure Enclave Library Minor Version. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\cell }{nvm_newness_ver\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
NVM Library Newness Version. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\cell }{nvm_major_ver\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
NVM Library Major Version. }\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\cell }{nvm_minor_ver\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
NVM Library Minor Version. }\cell }{\row }
{\qr char{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\cell }{se_commit_id[GINFO_COMMIT_ID_SZ]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Secure Enclave Build Commit ID. }\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Function Documentation\par
\pard\plain
{\xe \v populate_global_info\:Global Information}
{\xe \v Global Information\:populate_global_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
void populate_global_info ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 hsm_hdl_t}}}
  {\i hsm_session_hdl})}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This function is called to populate the Global Info structure\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hsm_session_hdl} \cell }{identifying the active session. \cell }
{\row }
}
}}
{\xe \v show_global_info\:Global Information}
{\xe \v Global Information\:show_global_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
void show_global_info (void )}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This function prints the Global Information of library \par
}}
{\xe \v hsm_get_dev_attest_api_ver\:Global Information}
{\xe \v Global Information\:hsm_get_dev_attest_api_ver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
uint8_t hsm_get_dev_attest_api_ver (void )}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This function returns the version supported for Device Attestation. \par
}}
{\xe \v get_soc_id_str\:Global Information}
{\xe \v Global Information\:get_soc_id_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
const char* get_soc_id_str (uint16_t  {\i soc_id})}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This function returns a string representating SoC ID\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i soc_id} \cell }{SoC ID fetched from Global Info\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String represention of the SoC ID \par
}}}}
{\xe \v get_soc_rev_str\:Global Information}
{\xe \v Global Information\:get_soc_rev_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
const char* get_soc_rev_str (uint16_t  {\i soc_rev})}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This function returns a string representating SoC Revision\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i soc_rev} \cell }{SoC Revision fetched from Global Info\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String represention of the SoC Revision \par
}}}}
{\xe \v get_soc_lf_str\:Global Information}
{\xe \v Global Information\:get_soc_lf_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
const char* get_soc_lf_str (uint16_t  {\i lifecycle})}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
This function returns a string representating Lifecycle\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lifecycle} \cell }{value fetched from Global Info\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
a string represention of Lifecycle \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Variable Documentation\par
\pard\plain
{\xe \v global_info\:Global Information}
{\xe \v Global Information\:global_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
struct {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASV" }{}}{\fldrslt {\cs37\ul\cf2 global_info_s}}}
 global_info}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Global Information structure instance which will be populated and later be used for getting the required platform or library details. \par
}}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
Error codes\par \pard\plain
{\tc\tcl2 \v Error codes}
{\xe \v Error codes}
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumerations\par
\pard\plain

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
 \{ {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATQ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_NO_ERROR}}}
 = 0x0,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATR" }{}}{\fldrslt {\cs37\ul\cf2 HSM_INVALID_MESSAGE}}}
 = 0x1,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATS" }{}}{\fldrslt {\cs37\ul\cf2 HSM_INVALID_ADDRESS}}}
 = 0x2,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATT" }{}}{\fldrslt {\cs37\ul\cf2 HSM_UNKNOWN_ID}}}
 = 0x3,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATU" }{}}{\fldrslt {\cs37\ul\cf2 HSM_INVALID_PARAM}}}
 = 0x4,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATV" }{}}{\fldrslt {\cs37\ul\cf2 HSM_NVM_ERROR}}}
 = 0x5,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OUT_OF_MEMORY}}}
 = 0x6,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 HSM_UNKNOWN_HANDLE}}}
 = 0x7,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATY" }{}}{\fldrslt {\cs37\ul\cf2 HSM_UNKNOWN_KEY_STORE}}}
 = 0x8,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATZ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_STORE_AUTH}}}
 = 0x9,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUA" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_STORE_ERROR}}}
 = 0xA,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUB" }{}}{\fldrslt {\cs37\ul\cf2 HSM_ID_CONFLICT}}}
 = 0xB,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUC" }{}}{\fldrslt {\cs37\ul\cf2 HSM_RNG_NOT_STARTED}}}
 = 0xC,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUD" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CMD_NOT_SUPPORTED}}}
 = 0xD,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUE" }{}}{\fldrslt {\cs37\ul\cf2 HSM_INVALID_LIFECYCLE}}}
 = 0xE,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUF" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_STORE_CONFLICT}}}
 = 0xF,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUG" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_STORE_COUNTER}}}
 = 0x10,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 HSM_FEATURE_NOT_SUPPORTED}}}
 = 0x11,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUI" }{}}{\fldrslt {\cs37\ul\cf2 HSM_SELF_TEST_FAILURE}}}
 = 0x12,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUJ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_NOT_READY_RATING}}}
 = 0x13,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUK" }{}}{\fldrslt {\cs37\ul\cf2 HSM_FEATURE_DISABLED}}}
 = 0x14,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUL" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_GROUP_FULL}}}
 = 0x19,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUM" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CANNOT_RETRIEVE_KEY_GROUP}}}
 = 0x1A,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUN" }{}}{\fldrslt {\cs37\ul\cf2 HSM_KEY_NOT_SUPPORTED}}}
 = 0x1B,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUO" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CANNOT_DELETE_PERMANENT_KEY}}}
 = 0x1C,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OUT_TOO_SMALL}}}
 = 0x1D,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_DATA_ALREADY_RETRIEVED}}}
 = 0x1F,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CRC_CHECK_ERR}}}
 = 0xB9,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OEM_CLOSED_LC_SIGNED_MSG_VERIFICATION_FAIL}}}
 = 0xF0,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 HSM_OEM_OPEN_LC_SIGNED_MSG_VERIFICATION_FAIL}}}
 = 0xF0,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 HSM_FATAL_FAILURE}}}
 = 0x29,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUV" }{}}{\fldrslt {\cs37\ul\cf2 HSM_SERVICES_DISABLED}}}
 = 0xF4,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 HSM_UNKNOWN_WARNING}}}
 = 0xFC,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 HSM_SIGNATURE_INVALID}}}
 = 0xFD,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 HSM_UNKNOWN_ERROR}}}
 = 0xFE,
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUZ" }{}}{\fldrslt {\cs37\ul\cf2 HSM_GENERAL_ERROR}}}
 = 0xFF
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Detailed Description\par
\pard\plain
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid
Enumeration Type Documentation\par
\pard\plain
{\xe \v hsm_err_t\:Error codes}
{\xe \v Error codes\:hsm_err_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b
enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 hsm_err_t}}}
}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Error codes returned by HSM functions. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v HSM_NO_ERROR\:Error codes}
{\xe \v Error codes\:HSM_NO_ERROR}
{\qr HSM_NO_ERROR{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Success. \par
}\cell }{\row }
{\xe \v HSM_INVALID_MESSAGE\:Error codes}
{\xe \v Error codes\:HSM_INVALID_MESSAGE}
{\qr HSM_INVALID_MESSAGE{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The received message is invalid or unknown. \par
}\cell }{\row }
{\xe \v HSM_INVALID_ADDRESS\:Error codes}
{\xe \v Error codes\:HSM_INVALID_ADDRESS}
{\qr HSM_INVALID_ADDRESS{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The provided address is invalid or doesn\'92t respect the API requirements. \par
}\cell }{\row }
{\xe \v HSM_UNKNOWN_ID\:Error codes}
{\xe \v Error codes\:HSM_UNKNOWN_ID}
{\qr HSM_UNKNOWN_ID{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The provided identifier is not known. \par
}\cell }{\row }
{\xe \v HSM_INVALID_PARAM\:Error codes}
{\xe \v Error codes\:HSM_INVALID_PARAM}
{\qr HSM_INVALID_PARAM{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
One of the parameter provided in the command is invalid. \par
}\cell }{\row }
{\xe \v HSM_NVM_ERROR\:Error codes}
{\xe \v Error codes\:HSM_NVM_ERROR}
{\qr HSM_NVM_ERROR{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
NVM generic issue. \par
}\cell }{\row }
{\xe \v HSM_OUT_OF_MEMORY\:Error codes}
{\xe \v Error codes\:HSM_OUT_OF_MEMORY}
{\qr HSM_OUT_OF_MEMORY{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
There is not enough memory to handle the requested operation. \par
}\cell }{\row }
{\xe \v HSM_UNKNOWN_HANDLE\:Error codes}
{\xe \v Error codes\:HSM_UNKNOWN_HANDLE}
{\qr HSM_UNKNOWN_HANDLE{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Unknown session/service handle. \par
}\cell }{\row }
{\xe \v HSM_UNKNOWN_KEY_STORE\:Error codes}
{\xe \v Error codes\:HSM_UNKNOWN_KEY_STORE}
{\qr HSM_UNKNOWN_KEY_STORE{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The key store identified by the provided \'93key store Id\'94 doesn\'92t exist and the \'93create\'94 flag is not set. \par
}\cell }{\row }
{\xe \v HSM_KEY_STORE_AUTH\:Error codes}
{\xe \v Error codes\:HSM_KEY_STORE_AUTH}
{\qr HSM_KEY_STORE_AUTH{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Key store authentication fails. \par
}\cell }{\row }
{\xe \v HSM_KEY_STORE_ERROR\:Error codes}
{\xe \v Error codes\:HSM_KEY_STORE_ERROR}
{\qr HSM_KEY_STORE_ERROR{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
An error occurred in the key store internal processing. \par
}\cell }{\row }
{\xe \v HSM_ID_CONFLICT\:Error codes}
{\xe \v Error codes\:HSM_ID_CONFLICT}
{\qr HSM_ID_CONFLICT{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
An element (key store, key\'85) with the provided ID already exists. \par
}\cell }{\row }
{\xe \v HSM_RNG_NOT_STARTED\:Error codes}
{\xe \v Error codes\:HSM_RNG_NOT_STARTED}
{\qr HSM_RNG_NOT_STARTED{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The internal RNG is not started. \par
}\cell }{\row }
{\xe \v HSM_CMD_NOT_SUPPORTED\:Error codes}
{\xe \v Error codes\:HSM_CMD_NOT_SUPPORTED}
{\qr HSM_CMD_NOT_SUPPORTED{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The functionality is not supported for the current session/service/key store configuration. \par
}\cell }{\row }
{\xe \v HSM_INVALID_LIFECYCLE\:Error codes}
{\xe \v Error codes\:HSM_INVALID_LIFECYCLE}
{\qr HSM_INVALID_LIFECYCLE{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Invalid lifecycle for requested operation. \par
}\cell }{\row }
{\xe \v HSM_KEY_STORE_CONFLICT\:Error codes}
{\xe \v Error codes\:HSM_KEY_STORE_CONFLICT}
{\qr HSM_KEY_STORE_CONFLICT{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
A key store with the same attributes already exists. \par
}\cell }{\row }
{\xe \v HSM_KEY_STORE_COUNTER\:Error codes}
{\xe \v Error codes\:HSM_KEY_STORE_COUNTER}
{\qr HSM_KEY_STORE_COUNTER{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The current key store reaches the max number of monotonic counter updates, updates are still allowed but monotonic counter will not be blown. \par
}\cell }{\row }
{\xe \v HSM_FEATURE_NOT_SUPPORTED\:Error codes}
{\xe \v Error codes\:HSM_FEATURE_NOT_SUPPORTED}
{\qr HSM_FEATURE_NOT_SUPPORTED{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The requested feature is not supported by the firwware. \par
}\cell }{\row }
{\xe \v HSM_SELF_TEST_FAILURE\:Error codes}
{\xe \v Error codes\:HSM_SELF_TEST_FAILURE}
{\qr HSM_SELF_TEST_FAILURE{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Self tests report an issue \par
}\cell }{\row }
{\xe \v HSM_NOT_READY_RATING\:Error codes}
{\xe \v Error codes\:HSM_NOT_READY_RATING}
{\qr HSM_NOT_READY_RATING{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The HSM is not ready to handle the current request \par
}\cell }{\row }
{\xe \v HSM_FEATURE_DISABLED\:Error codes}
{\xe \v Error codes\:HSM_FEATURE_DISABLED}
{\qr HSM_FEATURE_DISABLED{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
The required service/operation is disabled \par
}\cell }{\row }
{\xe \v HSM_KEY_GROUP_FULL\:Error codes}
{\xe \v Error codes\:HSM_KEY_GROUP_FULL}
{\qr HSM_KEY_GROUP_FULL{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Not enough space to store the key in the key group \par
}\cell }{\row }
{\xe \v HSM_CANNOT_RETRIEVE_KEY_GROUP\:Error codes}
{\xe \v Error codes\:HSM_CANNOT_RETRIEVE_KEY_GROUP}
{\qr HSM_CANNOT_RETRIEVE_KEY_GROUP{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Impossible to retrieve key group \par
}\cell }{\row }
{\xe \v HSM_KEY_NOT_SUPPORTED\:Error codes}
{\xe \v Error codes\:HSM_KEY_NOT_SUPPORTED}
{\qr HSM_KEY_NOT_SUPPORTED{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Key not supported \par
}\cell }{\row }
{\xe \v HSM_CANNOT_DELETE_PERMANENT_KEY\:Error codes}
{\xe \v Error codes\:HSM_CANNOT_DELETE_PERMANENT_KEY}
{\qr HSM_CANNOT_DELETE_PERMANENT_KEY{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Trying to delete a permanent key \par
}\cell }{\row }
{\xe \v HSM_OUT_TOO_SMALL\:Error codes}
{\xe \v Error codes\:HSM_OUT_TOO_SMALL}
{\qr HSM_OUT_TOO_SMALL{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Output buffer size is too small \par
}\cell }{\row }
{\xe \v HSM_DATA_ALREADY_RETRIEVED\:Error codes}
{\xe \v Error codes\:HSM_DATA_ALREADY_RETRIEVED}
{\qr HSM_DATA_ALREADY_RETRIEVED{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Data is Read Once, and has already been retrieved \par
}\cell }{\row }
{\xe \v HSM_CRC_CHECK_ERR\:Error codes}
{\xe \v Error codes\:HSM_CRC_CHECK_ERR}
{\qr HSM_CRC_CHECK_ERR{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Command CRC check error \par
}\cell }{\row }
{\xe \v HSM_OEM_CLOSED_LC_SIGNED_MSG_VERIFICATION_FAIL\:Error codes}
{\xe \v Error codes\:HSM_OEM_CLOSED_LC_SIGNED_MSG_VERIFICATION_FAIL}
{\qr HSM_OEM_CLOSED_LC_SIGNED_MSG_VERIFICATION_FAIL{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
In OEM closed lifecycle, Signed message signature verification failure \par
}\cell }{\row }
{\xe \v HSM_OEM_OPEN_LC_SIGNED_MSG_VERIFICATION_FAIL\:Error codes}
{\xe \v Error codes\:HSM_OEM_OPEN_LC_SIGNED_MSG_VERIFICATION_FAIL}
{\qr HSM_OEM_OPEN_LC_SIGNED_MSG_VERIFICATION_FAIL{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Warning: In OEM open lifecycles, Signed message signature verification failure \par
}\cell }{\row }
{\xe \v HSM_FATAL_FAILURE\:Error codes}
{\xe \v Error codes\:HSM_FATAL_FAILURE}
{\qr HSM_FATAL_FAILURE{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
A fatal failure occurred, the HSM goes in unrecoverable error state not replying to further requests \par
}\cell }{\row }
{\xe \v HSM_SERVICES_DISABLED\:Error codes}
{\xe \v Error codes\:HSM_SERVICES_DISABLED}
{\qr HSM_SERVICES_DISABLED{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Message neither handled by ROM nor FW \par
}\cell }{\row }
{\xe \v HSM_UNKNOWN_WARNING\:Error codes}
{\xe \v Error codes\:HSM_UNKNOWN_WARNING}
{\qr HSM_UNKNOWN_WARNING{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Unknown warnings \par
}\cell }{\row }
{\xe \v HSM_SIGNATURE_INVALID\:Error codes}
{\xe \v Error codes\:HSM_SIGNATURE_INVALID}
{\qr HSM_SIGNATURE_INVALID{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Failure in verification status of operations such as MAC verification, Signature verification. \par
}\cell }{\row }
{\xe \v HSM_UNKNOWN_ERROR\:Error codes}
{\xe \v Error codes\:HSM_UNKNOWN_ERROR}
{\qr HSM_UNKNOWN_ERROR{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Unknown errors \par
}\cell }{\row }
{\xe \v HSM_GENERAL_ERROR\:Error codes}
{\xe \v Error codes\:HSM_GENERAL_ERROR}
{\qr HSM_GENERAL_ERROR{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
Error in case General Error is received \par
}\cell }{\row }
}
}
\par \pard\plain
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid
IMX8ULP\par \pard\plain
{\tc\tcl2 \v IMX8ULP}
{\xe \v IMX8ULP}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 Ciphering}}}\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGF" }{}}{\fldrslt {\cs37\ul\cf2 HSM_CIPHER_ONE_GO_ALGO_OFB}}} is not supported\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGA" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AEAD_ALGO_GCM}}} is not supported\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGB" }{}}{\fldrslt {\cs37\ul\cf2 HSM_AEAD_ALGO_ALL_AEAD}}} is not supported \par}
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par
\pard\plain
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
