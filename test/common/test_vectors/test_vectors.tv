#########################################################################
#
# - The test vector filename with full PATH needs to be provided to
#	ele_hsm_test application with format: ele_hsm_test <tv_file_path>
#
# - Read test_add_instructions_tv.txt before for format description and the
#	steps to be followed while adding new test vectors for supported tests
#
# - This file contains Test vectors for ELE HSM API Tests.
#	Currently Supports test vectors for following operations:
#	KGEN, CIPHER, MAC, SIGN_VERIFY, HASH,
#
#########################################################################


TESTS_START


OPEN_KEY_MGMT_SRV
1234             #Key Management ID, KEY_MGMT_TV_ID to be used by tests



#Positive Case
TEST_KGEN_PSA_001

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         1          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000300 # HSM_KEY_USAGE_ENCRYPT | HSM_KEY_USAGE_DECRYPT
PERMITTED_ALGO    0x84C0FF00 # PERMITTED_ALGO_ALL_CIPHER
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Postive Case
TEST_KGEN_PSA_002

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         2          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x1100     # HSM_KEY_TYPE_HMAC
BIT_KEY_SZ        256        # HSM_KEY_SIZE_HMAC_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000C00 # HSM_KEY_USAGE_SIGN_MSG | HSM_KEY_USAGE_VERIFY_MSG
PERMITTED_ALGO    0x03800009 # PERMITTED_ALGO_HMAC_SHA256
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_003

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         3          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          64         # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        256        # HSM_KEY_SIZE_ECC_NIST_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00004000 # HSM_KEY_USAGE_DERIVE
PERMITTED_ALGO    0x06000609 # PERMITTED_ALGO_ECDSA_SHA256
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Negative Case - Incorrect Key Lifetime value
TEST_KGEN_PSA_004

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         4          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000012 # Incorrect Value
KEY_USAGE         0x00004300 # HSM_KEY_USAGE_DERIVE | HSM_KEY_USAGE_ENCRYPT | HSM_KEY_USAGE_DECRYPT
PERMITTED_ALGO    0x84C0FF00 # PERMITTED_ALGO_ALL_CIPHER
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_KGEN_END



#Negative Case - Incompatible Key Usage flags set, for HSM_KEY_TYPE_AES_256
TEST_KGEN_PSA_005

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         5          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x03C00200 # PERMITTED_ALGO_CMAC
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_KGEN_END



#Negative Case - Incompatible Key Usage flags set, for HSM_KEY_TYPE_AES_128
TEST_KGEN_PSA_006

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         6          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        128        # HSM_KEY_SIZE_AES_128
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x03C00200 # PERMITTED_ALGO_CMAC
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_KGEN_END



#Negative Case - Incorrect Permitted Algo
TEST_KGEN_PSA_007

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         7          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          64         # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        256        # HSM_KEY_SIZE_ECC_NIST_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x01108888 # Incorrect Value
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_KGEN_END



#Negative Case - Invalid Key Type
TEST_KGEN_PSA_008

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         8          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x99       # Non-Existent, Incorrect Key Type
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000C00 # HSM_KEY_USAGE_SIGN_MSG | HSM_KEY_USAGE_VERIFY_MSG
PERMITTED_ALGO    0x03C00200 # PERMITTED_ALGO_CMAC
EXPECTED_HSM_RESP 0x1B       # HSM_KEY_NOT_SUPPORTED

TEST_KGEN_END



#Negative Case - Incorrect Key Group, for Symmetric Key
TEST_KGEN_PSA_009

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         9          # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1024       # Key Group OUT OF RANGE [0-1023]
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000C00 # HSM_KEY_USAGE_SIGN_MSG | HSM_KEY_USAGE_VERIFY_MSG
PERMITTED_ALGO    0x03C00200 # PERMITTED_ALGO_CMAC
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_KGEN_END



#Negative Case - Incorrect Key Usage, for Asymmetric Key
TEST_KGEN_PSA_010

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         10         # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          64         # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        256        # HSM_KEY_SIZE_ECC_NIST_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00009000 # Non-Existent, Incorrect KEY USAGE value
PERMITTED_ALGO    0x06000609 # PERMITTED_ALGO_ECDSA_SHA256
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_KGEN_END



#Negative Case - Key Not Supported
TEST_KGEN_PSA_011

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         11         # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          80         # Public Key Out Size
KEY_TYPE          0x7130     # HSM_KEY_TYPE_ECC_BP_R1
BIT_KEY_SZ        320        # HSM_KEY_SIZE_ECC_BP_R1_320
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x06000608 # PERMITTED_ALGO_ECDSA_SHA224
EXPECTED_HSM_RESP 0x1B       # HSM_KEY_NOT_SUPPORTED

TEST_KGEN_END



##########################################################################
CIPHER Tests
##########################################################################

#KEY GENERATION Tests for generating keys which can be used in CIPHER TESTS


#Positive Case
TEST_KGEN_PSA_101

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         101        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000300 # HSM_KEY_USAGE_ENCRYPT | HSM_KEY_USAGE_DECRYPT
PERMITTED_ALGO    0x04404000 # PERMITTED_ALGO_CBC_NO_PADDING
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_102

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         102        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000300 # HSM_KEY_USAGE_ENCRYPT | HSM_KEY_USAGE_DECRYPT
PERMITTED_ALGO    0x04404400 # PERMITTED_ALGO_ECB_NO_PADDING
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_103

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         103        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000300 # HSM_KEY_USAGE_ENCRYPT | HSM_KEY_USAGE_DECRYPT
PERMITTED_ALGO    0x84C0FF00 # PERMITTED_ALGO_ALL_CIPHER
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_104

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         104        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000200 # HSM_KEY_USAGE_DECRYPT
PERMITTED_ALGO    0x04404000 # PERMITTED_ALGO_CBC_NO_PADDING
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_105

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         105        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          64         # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        256        # HSM_KEY_SIZE_ECC_NIST_256
FLAGS             0          #
KEY_GROUP         1          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x06000609 # PERMITTED_ALGO_ECDSA_SHA256
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END




# CIPHER tests using Saved Generated Keys with KEY_TV_ID



#Positive Case:
#Test Cipher operation with AES CBC algo using saved Key permitted for AES CBC
TEST_CIPHER_PSA_101

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         101        # Key TV ID from KGEN Tests to use the key
IV_SIZE           16         # IV Size provided before IV data

IV_DATA           16         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_CIPHER_END



#Positive Case:
#Test Cipher operation with AES ECB algo using saved Key permitted for AES ECB
TEST_CIPHER_PSA_102

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         102        # Key TV ID from KGEN Tests to use the key
IV_SIZE           0          # IV Size provided before IV data
IV_DATA           0          # IV data-IV size take input from next line
INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404400 # HSM_CIPHER_ONE_GO_ALGO_ECB
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_CIPHER_END



#Positive Case:
#Test Cipher operation with AES CBC using Key permitted for All (CBC, ECB)
TEST_CIPHER_PSA_103

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         103        # Key TV ID from KGEN Tests to use the key
IV_SIZE           16         # IV Size provided before IV data

IV_DATA           16         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_CIPHER_END



#Positive Case:
#Test Cipher operation with AES ECB using Key permitted for All (CBC, ECB)
TEST_CIPHER_PSA_104

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         103        # Key TV ID from KGEN Tests to use the key
IV_SIZE           0          # IV Size provided before IV data
IV_DATA           0          # IV data-IV size, for 0 size, No buffer input
INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404400 # HSM_CIPHER_ONE_GO_ALGO_ECB
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_CIPHER_END



#Negative Case:
#Incorrect Key Usage, only HSM_KEY_USAGE_DECRYPT (No ENCRYPT) in key usage
TEST_CIPHER_PSA_105

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         104        # Key TV ID from KGEN Tests to use the key
IV_SIZE           16         # IV Size provided before IV data

IV_DATA           16         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x1B       # HSM_KEY_NOT_SUPPORTED

TEST_CIPHER_END



#Negative Case:
#Mismatched Permitted Algo, key not permitted for AES CBC algo
TEST_CIPHER_PSA_106

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         102        # Key TV ID from KGEN Tests to use the key
IV_SIZE           16         # IV Size provided before IV data

IV_DATA           16         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x1B       # HSM_KEY_NOT_SUPPORTED

TEST_CIPHER_END



#Negative Case:
#Asymmetric Key is used- Incorrect Key Type, Permitted Algo, Key Usage
#Key attributes are not valid to be used with Cipher Operations
TEST_CIPHER_PSA_107

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         105        # Key TV ID from KGEN Tests to use the key
IV_SIZE           16         # IV Size provided before IV data

IV_DATA           16         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x1B       # HSM_KEY_NOT_SUPPORTED

TEST_CIPHER_END



#Negative Case:
#Non-Existent Key ID, Invalid KEY_TV_ID for which no key has been generated/saved
TEST_CIPHER_PSA_108

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         1011       # Key TV ID from KGEN Tests to use the key
IV_SIZE           16         # IV Size provided before IV data

IV_DATA           16         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x03       # HSM_UNKNOWN_ID

TEST_CIPHER_END



#Negative Case:
#Invalid IV size instead of 16 bytes providing 32 bytes
TEST_CIPHER_PSA_109

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         101        # Key TV ID from KGEN Tests to use the key
IV_SIZE           32         # IV Size provided before IV data

IV_DATA           32         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32         # Plaintext size before Plaintext/Input data

INPUT_DATA        32         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_CIPHER_END



#Negative Case:
#Invalid Output Size instead of 32 bytes providing 16 bytes
TEST_CIPHER_PSA_110

KEY_MGMT_TV_ID    1234        # Key Management TV ID
KEY_TV_ID         101         # Key TV ID from KGEN Tests to use the key
IV_SIZE           16          # IV Size provided before IV data

IV_DATA           16          # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        32          # Plaintext size before Plaintext/Input data

INPUT_DATA        32          # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

OUTPUT_SIZE       16          # Ciphertext/Output size
CIPHER_ALGO       0x04404000  # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x1D        # HSM_OUT_TOO_SMALL

TEST_CIPHER_END



#Negative Case:
#Invalid Input Size, not multiple of block size, block size 16 bytes for AES
TEST_CIPHER_PSA_111

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         101        # Key TV ID from KGEN Tests to use the key
IV_SIZE           16         # IV Size provided before IV data

IV_DATA           16         # IV data-IV size take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F

INPUT_SIZE        40         # Plaintext size before Plaintext/Input data

INPUT_DATA        40         # Plaintext size to take input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27

OUTPUT_SIZE       32         # Ciphertext/Output size
CIPHER_ALGO       0x04404000 # HSM_CIPHER_ONE_GO_ALGO_CBC
EXPECTED_HSM_RESP 0x04       # HSM_INVALID_PARAM

TEST_CIPHER_END



##########################################################################
MAC Tests
##########################################################################

#KEY GENERATION Tests for generating keys which can be used in MAC TESTS



#Positive Case
TEST_KGEN_PSA_201

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         201        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        256        # HSM_KEY_SIZE_AES_256
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000C00 # HSM_KEY_USAGE_SIGN_MSG | HSM_KEY_USAGE_VERIFY_MSG
PERMITTED_ALGO    0x03C00200 # PERMITTED_ALGO_CMAC
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_202

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         202        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x2400     # HSM_KEY_TYPE_AES
BIT_KEY_SZ        128        # HSM_KEY_SIZE_AES_128
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000C00 # HSM_KEY_USAGE_SIGN_MSG | HSM_KEY_USAGE_VERIFY_MSG
PERMITTED_ALGO    0x03C00200 # PERMITTED_ALGO_CMAC
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_203

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         203        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x1100     # HSM_KEY_TYPE_HMAC
BIT_KEY_SZ        256        # HSM_KEY_SIZE_HMAC_256
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000C00 # HSM_KEY_USAGE_SIGN_MSG | HSM_KEY_USAGE_VERIFY_MSG
PERMITTED_ALGO    0x03800009 # PERMITTED_ALGO_HMAC_SHA256
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



#Positive Case
TEST_KGEN_PSA_204

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         204        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          0          # Symmetric Key. So, Public Key Out Size 0
KEY_TYPE          0x1100     # HSM_KEY_TYPE_HMAC
BIT_KEY_SZ        384        # HSM_KEY_SIZE_HMAC_384
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00000C00 # HSM_KEY_USAGE_SIGN_MSG | HSM_KEY_USAGE_VERIFY_MSG
PERMITTED_ALGO    0x0380000A # PERMITTED_ALGO_HMAC_SHA384
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END




# MAC tests using Saved Generated Keys with KEY_TV_ID



#Positive Case:
#Test MAC operation with CMAC algo using saved AES 256 Key permitted for CMAC
TEST_MAC_PSA_201

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         201        # Key TV ID from KGEN Tests to use the key
MAC_ALGO          0x03C00200 # PERMITTED_ALGO_CMAC
PAYLOAD_SIZE      32         # Payload Size provided before Payload data

PAYLOAD_DATA      32         # Payload data-Payload size, input from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3

MAC_SIZE          16         # MAC buffer size
EXP_MAC_SIZE      16         # Expected MAC size
EXP_VERIFICATION_STATUS 0x6C1AA1C6u # HSM_MAC_VERIFICATION_STATUS_SUCCESS
EXP_MAC_GEN_HSM_RESP    0x00 # HSM_NO_ERROR
EXP_MAC_VERIFY_HSM_RESP 0x00 # HSM_NO_ERROR

TEST_MAC_END



#Positive Case:
#Test MAC operation with CMAC algo using saved AES 128 Key permitted for CMAC
TEST_MAC_PSA_202

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         202        # Key TV ID from KGEN Tests to use the key
MAC_ALGO          0x03C00200 # PERMITTED_ALGO_CMAC
PAYLOAD_SIZE      16         # Payload Size provided before Payload data

PAYLOAD_DATA      16         # Payload data-Payload size, input from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26

MAC_SIZE          16         # MAC buffer size
EXP_MAC_SIZE      16         # Expected MAC size
EXP_VERIFICATION_STATUS 0x6C1AA1C6u # HSM_MAC_VERIFICATION_STATUS_SUCCESS
EXP_MAC_GEN_HSM_RESP    0x00 # HSM_NO_ERROR
EXP_MAC_VERIFY_HSM_RESP 0x00 # HSM_NO_ERROR

TEST_MAC_END



#Positive Case:
#Test MAC operation with HMAC algo using saved HMAC 256 Key permitted for HMAC
TEST_MAC_PSA_203

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         203        # Key TV ID from KGEN Tests to use the key
MAC_ALGO          0x03800009 # PERMITTED_ALGO_HMAC_SHA256
PAYLOAD_SIZE      32         # Payload Size provided before Payload data

PAYLOAD_DATA      32         # Payload data-Payload size, input from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3

MAC_SIZE          32         # MAC buffer size
EXP_MAC_SIZE      32         # Expected MAC size
EXP_VERIFICATION_STATUS 0x6C1AA1C6u # HSM_MAC_VERIFICATION_STATUS_SUCCESS
EXP_MAC_GEN_HSM_RESP    0x00 # HSM_NO_ERROR
EXP_MAC_VERIFY_HSM_RESP 0x00 # HSM_NO_ERROR

TEST_MAC_END



#Positive Case:
#Test MAC operation with HMAC algo using saved HMAC 384 Key permitted for HMAC
TEST_MAC_PSA_204

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         204        # Key TV ID from KGEN Tests to use the key
MAC_ALGO          0x0380000A # PERMITTED_ALGO_HMAC_SHA384
PAYLOAD_SIZE      32         # Payload Size provided before Payload data

PAYLOAD_DATA      32         # Payload data-Payload size, input from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3

MAC_SIZE          48         # MAC buffer size
EXP_MAC_SIZE      48         # Expected MAC size
EXP_VERIFICATION_STATUS 0x6C1AA1C6u # HSM_MAC_VERIFICATION_STATUS_SUCCESS
EXP_MAC_GEN_HSM_RESP    0x00 # HSM_NO_ERROR
EXP_MAC_VERIFY_HSM_RESP 0x00 # HSM_NO_ERROR

TEST_MAC_END



#Negative Case:
#Test MAC operation with Unknown Key ID
TEST_MAC_PSA_205

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         299        # No Key that corresponds this KEY_TV_ID
MAC_ALGO          0x03C00200 # PERMITTED_ALGO_CMAC
PAYLOAD_SIZE      16         # Payload Size provided before Payload data

PAYLOAD_DATA      16         # Payload data-Payload size, input from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26

MAC_SIZE          16         # MAC buffer size
EXP_MAC_SIZE      0          # Ignored as expected error HSM_UNKNOWN_ID
EXP_VERIFICATION_STATUS 0x0  # Not validated as Error expected
EXP_MAC_GEN_HSM_RESP    0x03 # HSM_UNKNOWN_ID
EXP_MAC_VERIFY_HSM_RESP 0x03 # HSM_UNKNOWN_ID

TEST_MAC_END



#Negative Case:
#Test MAC operation for Incorrect input MAC size
TEST_MAC_PSA_206

KEY_MGMT_TV_ID    1234       # Key Management TV ID
KEY_TV_ID         203        # Key TV ID from KGEN Tests to use the key
MAC_ALGO          0x03800009 # PERMITTED_ALGO_HMAC_SHA256
PAYLOAD_SIZE      32         # Payload Size provided before Payload data

PAYLOAD_DATA      32         # Payload data-Payload size, input from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3

MAC_SIZE          16         # MAC buffer size
EXP_MAC_SIZE      32         # Expected MAC size as HSM_OUT_TOO_SMALL (0x1D)
EXP_VERIFICATION_STATUS 0x0  # MAC Verification failure status
EXP_MAC_GEN_HSM_RESP    0x1D # HSM_OUT_TOO_SMALL
EXP_MAC_VERIFY_HSM_RESP 0xFD # HSM_SIGNATURE_INVALID

TEST_MAC_END



##########################################################################
SIGNATURE GENERATION & SIGNATURE VERIFICATION Tests
##########################################################################


#KEY GENERATION Tests for generating keys which can be used in Signature
#Generation & Signature Verification Tests


#Positive Case:
TEST_KGEN_PSA_301

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         301        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          56         # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        224        # HSM_KEY_SIZE_ECC_NIST_224
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x06000608 # PERMITTED_ALGO_ECDSA_SHA224
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END


#Positive Case:
TEST_KGEN_PSA_302

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         302        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          64         # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        256        # HSM_KEY_SIZE_ECC_NIST_256
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x06000609 # PERMITTED_ALGO_ECDSA_SHA256
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END


#Positive Case:
TEST_KGEN_PSA_303

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         303        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          96         # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        384        # HSM_KEY_SIZE_ECC_NIST_384
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x0600060A # PERMITTED_ALGO_ECDSA_SHA384
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END


#Positive Case:
TEST_KGEN_PSA_304

KEY_MGMT_TV_ID    1234       # Key Management ID
KEY_TV_ID         304        # Key TV ID to use the key later
KEY_ID            0x0        # Key ID 0 for Volatile Key
OUT_SIZE          132        # Public Key Out Size
KEY_TYPE          0x7112     # HSM_KEY_TYPE_ECC_NIST
BIT_KEY_SZ        521        # HSM_KEY_SIZE_ECC_NIST_521
FLAGS             0          #
KEY_GROUP         3          # Key Group b/w 0-1023
KEY_LIFETIME      0x00000000 # HSM_SE_INTERN_STORAGE_VOLATILE
KEY_USAGE         0x00003000 # HSM_KEY_USAGE_SIGN_HASH | HSM_KEY_USAGE_VERIFY_HASH
PERMITTED_ALGO    0x0600060B # PERMITTED_ALGO_ECDSA_SHA512
EXPECTED_HSM_RESP 0x00       # HSM_NO_ERROR

TEST_KGEN_END



# Signature Generation & Signature Verification tests using Saved Generated
# Keys with KEY_TV_ID



#Positive Case:
#Test Signature Generation & Verification operation with ECC NIST 224 key,
#and ECDSA SHA224 algorithm
TEST_SIGN_VERIFY_PSA_301

KEY_TV_ID         301        # Key TV ID from KGEN Tests to use the key
MESSAGE_SIZE      28         # Message Size provided before Message buffer

MESSAGE           28         # Message-Message size, input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B,

SIGNATURE_SIZE    56         # Signature size
SCHEME_ID         0x06000608 # HSM_SIGNATURE_SCHEME_ECDSA_SHA224
SIGN_GEN_FLAGS    0x0        # HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST
SIGN_VERIFY_FLAGS 0x0        # HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST
PKEY_TYPE         0x4112     # HSM_PUBKEY_TYPE_ECC_NIST
KEY_SIZE          56         # Public Key Byte Size
BIT_KEY_SZ        224        # HSM_KEY_SIZE_ECC_NIST_224
EXP_SIGNATURE_SIZE 56        # Expected Signature Size in API Resp
EXP_VERIFICATION_STATUS 0x5A3CC3A5 # HSM_VERIFICATION_STATUS_SUCCESS
EXP_SIGN_GEN_RSP  0x0        # HSM_NO_ERROR
EXP_SIGN_VERIFY_RSP 0x0      # HSM_NO_ERROR

TEST_SIGN_VERIFY_END



#Positive Case:
#Test Signature Generation & Verification operation with ECC NIST 256 key,
#and ECDSA SHA256 key
TEST_SIGN_VERIFY_PSA_302

KEY_TV_ID         302        # Key TV ID from KGEN Tests to use the key
MESSAGE_SIZE      32         # Message Size provided before Message buffer

MESSAGE           32         # Message-Message size, input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F

SIGNATURE_SIZE    64         # Signature size
SCHEME_ID         0x06000609 # HSM_SIGNATURE_SCHEME_ECDSA_SHA256
SIGN_GEN_FLAGS    0x0        # HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST
SIGN_VERIFY_FLAGS 0x0        # HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST
PKEY_TYPE         0x4112     # HSM_PUBKEY_TYPE_ECC_NIST
KEY_SIZE          64         # Publc Key Byte Size
BIT_KEY_SZ        256        # HSM_KEY_SIZE_ECC_NIST_256
EXP_SIGNATURE_SIZE 64         # Expected Signature Size in API Resp
EXP_VERIFICATION_STATUS 0x5A3CC3A5 # HSM_VERIFICATION_STATUS_SUCCESS
EXP_SIGN_GEN_RSP  0x0        # HSM_NO_ERROR
EXP_SIGN_VERIFY_RSP 0x0      # HSM_NO_ERROR

TEST_SIGN_VERIFY_END



#Positive Case:
#Test Signature Generation & Verification operation with ECC NIST 384 key,
#and ECDSA SHA384 algorithm
TEST_SIGN_VERIFY_PSA_303

KEY_TV_ID         303        # Key TV ID from KGEN Tests to use the key
MESSAGE_SIZE      48         # Message Size provided before Message buffer

MESSAGE           48         # Message-Message size, input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F

SIGNATURE_SIZE    96         # Signature size
SCHEME_ID         0x0600060A # PERMITTED_ALGO_ECDSA_SHA384
SIGN_GEN_FLAGS    0x0        # HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST
SIGN_VERIFY_FLAGS 0x0        # HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST
PKEY_TYPE         0x4112     # HSM_PUBKEY_TYPE_ECC_NIST
KEY_SIZE          96         # Public Key Byte Size
BIT_KEY_SZ        384        # HSM_KEY_SIZE_ECC_NIST_384
EXP_SIGNATURE_SIZE 96        # Expected Signature Size in API Resp
EXP_VERIFICATION_STATUS 0x5A3CC3A5 # HSM_VERIFICATION_STATUS_SUCCESS
EXP_SIGN_GEN_RSP  0x0        # HSM_NO_ERROR
EXP_SIGN_VERIFY_RSP 0x0      # HSM_NO_ERROR

TEST_SIGN_VERIFY_END



#Positive Case:
#Test Signature Generation & Verification operation with ECC NIST 521 key,
#and ECDSA SHA512 algorithm
TEST_SIGN_VERIFY_PSA_304

KEY_TV_ID         304        # Key TV ID from KGEN Tests to use the key
MESSAGE_SIZE      64         # Message Size provided before Message buffer

MESSAGE           64         # Message-Message size, input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,

SIGNATURE_SIZE    132        # Signature size
SCHEME_ID         0x0600060B # PERMITTED_ALGO_ECDSA_SHA512
SIGN_GEN_FLAGS    0x0        # HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST
SIGN_VERIFY_FLAGS 0x0        # HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST
PKEY_TYPE         0x4112     # HSM_PUBKEY_TYPE_ECC_NIST
KEY_SIZE          132        # Public Key Byte Size
BIT_KEY_SZ        521        # HSM_KEY_SIZE_ECC_NIST_521
EXP_SIGNATURE_SIZE 132       # Expected Signature Size in API Resp
EXP_VERIFICATION_STATUS 0x5A3CC3A5 # HSM_VERIFICATION_STATUS_SUCCESS
EXP_SIGN_GEN_RSP    0x0      # HSM_NO_ERROR
EXP_SIGN_VERIFY_RSP 0x0      # HSM_NO_ERROR

TEST_SIGN_VERIFY_END



#Negative Case:
#Test Signature Generation & Verification operation with ECC NIST 224 key,
#and ECDSA SHA224 algorithm, and Incorrect Input Signature Size
TEST_SIGN_VERIFY_PSA_305

KEY_TV_ID         301        # Key TV ID from KGEN Tests to use the key
MESSAGE_SIZE      28         # Message Size provided before Message buffer

MESSAGE           28         # Message-Message size, input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B,

SIGNATURE_SIZE    54         # Signature size
SCHEME_ID         0x06000608 # HSM_SIGNATURE_SCHEME_ECDSA_SHA224
SIGN_GEN_FLAGS    0x0        # HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST
SIGN_VERIFY_FLAGS 0x0        # HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST
PKEY_TYPE         0x4112     # HSM_PUBKEY_TYPE_ECC_NIST
KEY_SIZE          56         # Public Key Byte Size
BIT_KEY_SZ        224        # HSM_KEY_SIZE_ECC_NIST_224
EXP_SIGNATURE_SIZE 56        # Expected Signature Size in API Resp
EXP_VERIFICATION_STATUS 0x2B4DD4B2 # HSM_VERIFICATION_STATUS_FAILURE
EXP_SIGN_GEN_RSP    0x1D      # HSM_OUT_TOO_SMALL
EXP_SIGN_VERIFY_RSP 0x04      # HSM_INVALID_PARAM

TEST_SIGN_VERIFY_END



#Negative Case:
#Test Signature Generation & Verification operation with ECC NIST 224 key,
#and ECDSA SHA224 algorithm and Invalid input Message Size
TEST_SIGN_VERIFY_PSA_306

KEY_TV_ID         301        # Key TV ID from KGEN Tests to use the key
MESSAGE_SIZE      16         # Message Size provided before Message buffer

MESSAGE           16         # Message-Message size, input from next line
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,

SIGNATURE_SIZE    56         # Signature size
SCHEME_ID         0x06000608 # HSM_SIGNATURE_SCHEME_ECDSA_SHA224
SIGN_GEN_FLAGS    0x0        # HSM_OP_GENERATE_SIGN_FLAGS_INPUT_DIGEST
SIGN_VERIFY_FLAGS 0x0        # HSM_OP_VERIFY_SIGN_FLAGS_INPUT_DIGEST
PKEY_TYPE         0x4112     # HSM_PUBKEY_TYPE_ECC_NIST
KEY_SIZE          56         # Public Key Byte Size
BIT_KEY_SZ        224        # HSM_KEY_SIZE_ECC_NIST_224
EXP_SIGNATURE_SIZE 0         # Ignored as expected error HSM_INVALID_PARAM
EXP_VERIFICATION_STATUS 0x2B4DD4B2 # HSM_VERIFICATION_STATUS_FAILURE
EXP_SIGN_GEN_RSP    0x04      # HSM_INVALID_PARAM
EXP_SIGN_VERIFY_RSP 0x04      # HSM_INVALID_PARAM

TEST_SIGN_VERIFY_END




CLOSE_KEY_MGMT_SRV
1234     #KEY_MGMT_TV_ID




##########################################################################
HASH Tests
##########################################################################


#Positive Case:
#Test HASH operation for algo HSM_HASH_ALGO_SHA_224
TEST_HASH_PSA_401

HASH_ALGO         0x02000008   #HSM_HASH_ALGO_SHA_224
INPUT_SIZE        300          #Input Size

INPUT_DATA        300          #Input Data-Input Size, buffer from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0,

OUTPUT_SIZE            28      # Output Size
EXP_OUTPUT_SIZE        28      # Expected Output Size

EXP_OUTPUT_BUF         28      # Expected Output-Buffer Size, input next line
0x55, 0x4D, 0x5E, 0xED, 0x37, 0x31, 0x6F, 0xCA,
0xD7, 0x08, 0x72, 0x54, 0x4E, 0x05, 0x8C, 0xD4,
0xFC, 0x9E, 0x1C, 0x68, 0xE3, 0xDA, 0x18, 0x29,
0x44, 0x39, 0xB4, 0xAA,

EXP_HASH_HSM_RESP      0x00   # HSM_NO_ERROR

TEST_HASH_END



#Positive Case:
#Test HASH operation for algo HSM_HASH_ALGO_SHA_256
TEST_HASH_PSA_402

HASH_ALGO         0x02000009   #HSM_HASH_ALGO_SHA_256
INPUT_SIZE        300          #Input Size

INPUT_DATA        300          #Input Data-Input Size, buffer from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0,

OUTPUT_SIZE            32      # Output Size
EXP_OUTPUT_SIZE        32      # Expected Output Size

EXP_OUTPUT_BUF         32      # Expected Output-Buffer Size, input next line
0x1B, 0x6A, 0x99, 0xE1, 0x5A, 0x4A, 0x57, 0x86,
0x7D, 0x8A, 0x8F, 0xB1, 0x43, 0xF7, 0xFC, 0x7D,
0xDD, 0x0A, 0x5A, 0xF2, 0x45, 0x5F, 0xFC, 0xBA,
0x0B, 0x77, 0xF7, 0x92, 0xA0, 0xF1, 0xBF, 0x20,

EXP_HASH_HSM_RESP      0x00   # HSM_NO_ERROR

TEST_HASH_END




#Positive Case:
#Test HASH operation for algo HSM_HASH_ALGO_SHA_384
TEST_HASH_PSA_403

HASH_ALGO         0x0200000A   #HSM_HASH_ALGO_SHA_384
INPUT_SIZE        300          #Input Size

INPUT_DATA        300          #Input Data-Input Size, buffer from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0,

OUTPUT_SIZE            48      # Output Size
EXP_OUTPUT_SIZE        48      # Expected Output Size

EXP_OUTPUT_BUF         48      # Expected Output-Buffer Size, input next line
0xA9, 0x30, 0xFE, 0x88, 0x38, 0xCB, 0x69, 0xAB,
0x44, 0xC2, 0xAC, 0x6D, 0xB3, 0xB5, 0x28, 0xF3,
0xE9, 0xAD, 0x3C, 0x38, 0xAA, 0xC3, 0xB8, 0xE5,
0xE0, 0x1F, 0xF9, 0x28, 0x71, 0xFC, 0x09, 0xE9,
0xB2, 0x67, 0x7F, 0x5E, 0xB2, 0xDA, 0x7E, 0x6D,
0x6F, 0x08, 0xE4, 0x52, 0xA4, 0x5F, 0x01, 0x48,

EXP_HASH_HSM_RESP      0x00   # HSM_NO_ERROR

TEST_HASH_END



#Positive Case:
#Test HASH operation for algo HSM_HASH_ALGO_SHA_512
TEST_HASH_PSA_404

HASH_ALGO         0x0200000B   #HSM_HASH_ALGO_SHA_512
INPUT_SIZE        300          #Input Size

INPUT_DATA        300          #Input Data-Input Size, buffer from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0,

OUTPUT_SIZE            64      # Output Size
EXP_OUTPUT_SIZE        64      # Expected Output Size

EXP_OUTPUT_BUF         64      # Expected Output-Buffer Size, input next line
0xEE, 0x29, 0x10, 0x30, 0xB7, 0xE3, 0xF0, 0x70,
0x4C, 0x8B, 0x7C, 0xE5, 0x1C, 0x99, 0x46, 0x1C,
0xEA, 0xC3, 0xF9, 0xBA, 0xB5, 0xC3, 0x8F, 0x3C,
0x8C, 0xC8, 0x59, 0x40, 0x20, 0x68, 0x3D, 0x1E,
0xB5, 0x3C, 0xDF, 0x0A, 0x08, 0xED, 0xED, 0x01,
0x70, 0x12, 0xE2, 0xB0, 0x5A, 0xE9, 0xA3, 0x5E,
0x41, 0xC4, 0xE7, 0x6E, 0x8C, 0x11, 0x54, 0x35,
0xBA, 0x36, 0x53, 0x54, 0xEB, 0x62, 0xD0, 0x9F,

EXP_HASH_HSM_RESP      0x00   # HSM_NO_ERROR

TEST_HASH_END




#Negative Case:
#Test HASH operation for algo HSM_HASH_ALGO_SHA_224
#and Incorrect Output Size in input params (greater than required)
TEST_HASH_PSA_405

HASH_ALGO         0x02000008   #HSM_HASH_ALGO_SHA_224
INPUT_SIZE        300          #Input Size

INPUT_DATA        300          #Input Data-Input Size, buffer from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0,

OUTPUT_SIZE            29      # Output Size
EXP_OUTPUT_SIZE        28      # Expected Output Size

EXP_OUTPUT_BUF         28      # Expected Output-Buffer Size, input next line
0x55, 0x4D, 0x5E, 0xED, 0x37, 0x31, 0x6F, 0xCA,
0xD7, 0x08, 0x72, 0x54, 0x4E, 0x05, 0x8C, 0xD4,
0xFC, 0x9E, 0x1C, 0x68, 0xE3, 0xDA, 0x18, 0x29,
0x44, 0x39, 0xB4, 0xAA,

EXP_HASH_HSM_RESP      0x00   # HSM_NO_ERROR

TEST_HASH_END




#Negative Case:
#Test HASH operation for algo HSM_HASH_ALGO_SHA_224
#and Incorrect Output Size in input params (less than required)
TEST_HASH_PSA_406

HASH_ALGO         0x02000008   #HSM_HASH_ALGO_SHA_224
INPUT_SIZE        300          #Input Size

INPUT_DATA        300          #Input Data-Input Size, buffer from next line
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0, 0x7C, 0xCB, 0x0E, 0xA9,
0xF4, 0x74, 0x7B, 0x8C, 0xCD, 0xA8, 0xA4, 0xF3,
0x6D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20,
0xB2, 0xE1, 0x4C, 0x5C, 0x79, 0xC6, 0xDF, 0x5B,
0x85, 0xF4, 0xFE, 0x7E, 0xD8, 0xDB, 0x7A, 0x26,
0x2B, 0x9D, 0xA7, 0xE0,

OUTPUT_SIZE            27      # Output Size
EXP_OUTPUT_SIZE        28      # Expected Output Size

EXP_OUTPUT_BUF         27      # Expected Output-Buffer Size, input next line
0x55, 0x4D, 0x5E, 0xED, 0x37, 0x31, 0x6F, 0xCA,
0xD7, 0x08, 0x72, 0x54, 0x4E, 0x05, 0x8C, 0xD4,
0xFC, 0x9E, 0x1C, 0x68, 0xE3, 0xDA, 0x18, 0x29,
0x44, 0x39, 0xB4,

EXP_HASH_HSM_RESP      0x1D    # HSM_OUT_TOO_SMALL

TEST_HASH_END




TESTS_END
